{"version":3,"sources":["serviceWorker.js","consts.js","helpers/spotifyHelper.js","services/spotify.js","helpers/cookieHelper.js","components/Home/index.js","components/Home/Home.jsx","components/Navigation/Navigation.jsx","components/Navigation/index.js","components/FourOhFour/index.js","components/FourOhFour/FourOhFour.jsx","components/Player/Player.jsx","components/Player/index.js","helpers/languageHelper.js","helpers/filterHelper.js","services/genius.js","components/Lyrics/Lyrics.jsx","components/Service/index.js","components/Service/Service.jsx","components/Callback/Callback.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","SPOTIFY_CODE_VERIFIER","GENIUS_ACCESS_TOKEN","PROXY_URL","urlEncodeData","data","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","SpotifyService","getPKCEAuthUri","redirectUri","baseUrl","scopesEncoded","challenge","this","encodePKCEChallenge","codeChallengeMethod","method","codeChallenge","endpoint","verifier","sha","sha256","Base64","stringify","replace","exchangePKCECode","pkceCode","authCallback","encodedBody","grant_type","client_id","code","redirect_uri","code_verifier","axios","url","headers","timeout","then","result","catch","error","console","response","parseAuth","expiresSeconds","expires_in","authExpireTime","getAuthExpireTime","scopes","scope","split","authToken","access_token","tokenType","token_type","refreshToken","refresh_token","expireDate","refreshAuth","encodedData","handleApiError","apiPath","message","seconds","Date","now","makeApiRequest","callback","getCurrentPlaybackState","apiToken","pause","play","previousTrack","nextTrack","setVolume","volume","seek","positionMs","Cookies","cname","cvalue","exdays","d","setTime","getTime","expires","toUTCString","document","cookie","name","ca","i","length","c","charAt","substring","indexOf","index","splice","getCookie","EGenifyCookieNames","Home","props","authStatus","URLSearchParams","search","get","state","showAuthError","redirect","onGetSpotifyAuth","bind","prevAuthStr","prevAuth","JSON","parse","setState","className","Row","Container","style","fontSize","fontWeight","Button","width","onClick","icon","faSpotify","href","variant","faTwitter","Toast","show","onClose","position","bottom","right","color","Header","Body","getAuthMessage","to","Component","pkg","require","Navigation","displayChangelog","toggleChangelog","Navbar","expand","backgroundColor","Brand","Nav","Link","version","Toggle","aria-controls","Collapse","id","faGithub","Modal","size","onHide","closeButton","borderColor","Title","changelogs","logs","map","log","changes","change","source","Footer","FourOhFour","onReturn","faHome","msToTime","millisec","toFixed","minutes","Math","floor","hours","retrieveAlbumArt","playState","item","album","images","Player","auth","volumePercent","device","volume_percent","trackProgressMs","progress_ms","isChangingTrackProgress","onPlayPause","onNextTrack","onPreviousTrack","onToggleVolumeMute","onVolumeChanged","onFinishVolumeChanged","onProgressChanged","onFinishProgressChanged","prevProps","is_playing","changedEvent","parseInt","target","value","Col","xl","lg","md","sm","xs","external_urls","spotify","alt","artists","src","maxWidth","maxHeight","allArtists","key","getFormattedArtists","faStepBackward","faPause","faPlay","faStepForward","onMouseUp","min","max","duration_ms","onChange","tooltip","faVolumeMute","faVolumeUp","ELanguages","filterStartEndSpaceChars","str","processString","filterSpecialChars","filterSpecialSpace","toLowerCase","GeniusService","playData","filteredTitle","searchTerm","geniusUrl","parseLyricsFromUrl","allLyrics","html","tmp","implementation","createHTMLDocument","body","innerHTML","parseHTML","request","responseText","querySelectorAll","allDivs","getElementsByTagName","div","lowercase","includes","filteredLyrics","filtered","textContent","getRelevantResult","hits","trackInfo","hit","geniusArtist","primary_artist","geniusTrackName","title","spotifyTrackName","spotifyFirstArtistName","geniusIncludes","spotifyIncludes","Lyrics","kuroshiro","Kuroshiro","init","KuromojiAnalyzer","dictPath","originalLyrics","romanizedLyrics","lyricsSpotifyTrackName","lyricsInfo","loaded","isRomanized","originalLyricLanguage","shouldUpdateLyrics","updateLyrics","onToggleRomanize","resetLyricState","onRetryLyricsBtn","info","full_title","lyrics","origLyricLang","lang","koreanChars","getKoreanChars","japaneseChars","getJapaneseChars","chineseChars","getChineseChars","russianChars","getRussianChars","determineLanguage","convert","mode","romajiLyrics","pinyin4js","convertToPinyinString","WITH_TONE_MARK","Aromanize","romanize","cyrillicToTranslit","transform","faSpinner","height","Form","Check","type","label","Service","authStringified","isRefreshing","toLocaleString","deleteCookie","isRefreshingAuth","refreshAuthRoutine","spotifyUpdateRoutine","infoMessage","showInfoMessage","initService","setInterval","updateRoutine","expireMs","setTimeout","SPOTIFY_REFRESH_MINUTES","refreshedAuth","stringified","setCookie","Callback","exchangeData","keyValue","kvSplit","authData","App","basename","process","exact","path","component","app","StrictMode","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.763990e6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/// Social Links\r\n/// Twitter\r\nexport const TWITTER_LINK = \"https://twitter.com/JoshLmao\";\r\n/// Repository github link\r\nexport const GITHUB_LINK = \"https://github.com/JoshLmao/Genify\";\r\n\r\n\r\n/* Spotify API & related params */\r\n/// Client ID required for Spotify auth\r\nexport const SPOTIFY_CLIENT_ID = \"f4dc97c399124fc99254c5d7ac2bf4bd\";\r\n/// A code verifier for the PKCE auth method\r\n/// https://tonyxu-io.github.io/pkce-generator/\r\nexport const SPOTIFY_CODE_VERIFIER = \"dZ7Y5s8PMg_oljOH1DgF_PDXXp-GvzF3g1OMlXh08Af~5J5hosQPQ4eNILnSf3IK.SKtnWlgANdHC.1.wSBw0ZqxtxBRsD7vkGV_f67RBa4DoFo0O3mrz5wB-3e17TsK\";\r\n\r\n\r\n/* Genius API */\r\n/// Access token for using Genius web api\r\nexport const GENIUS_ACCESS_TOKEN = \"jZPEvjdl6Sk1RJUDoo0tTuEFYv2B8rbosLsOUnFBqbi11dCtfftjiN911-a9q0lo\";\r\n\r\n\r\n/// Time in ms for all web requests with no response to timeout\r\nexport const REQUEST_TIMEOUT_MS = 30000;\r\n/// Time in ms that the Spotify player updates its play state\r\nexport const PLAYER_UPDATE_MS = 2000;\r\n/// Time in minutes to refresh the user auth before it expires\r\nexport const SPOTIFY_REFRESH_MINUTES = 3;\r\n\r\n/// Proxy URL to use to aviod CORS issue\r\nexport const PROXY_URL = \"https://genify-proxy.herokuapp.com/\";\r\n/// Mirror Homepage property in package.json. Used in services when can't access it\r\nexport const HOMEPAGE = \"https://genify.joshlmao.com\";","import React from 'react';\r\n\r\n// Gets a formatted string of all artists on one track, separated with a comma and correct hyperlinking\r\n// For example \"Enter Shikari, TWICE, KSI\"\r\nexport function getFormattedArtists (playState) {\r\n    if (!playState) {\r\n        return null;\r\n    }\r\n\r\n    let allArtists = playState.item?.artists;\r\n    if (allArtists) {\r\n        return (\r\n            <div className=\"d-flex\">\r\n                {\r\n                    allArtists.map((value, index) => {\r\n                        return (\r\n                        <div className=\"d-flex\" key={value.name}>\r\n                            <a  href={value.external_urls.spotify}>{value.name}</a> \r\n                            { index < allArtists.length - 1 && <div className=\"pr-1\"> ,</div> }\r\n                        </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\n/// Encodes the data into application/x-www-form-urlencoded for POST requests\r\n/// https://stackoverflow.com/a/37562814/11593118\r\nexport function urlEncodeData(data) {\r\n    var formBody = [];\r\n    for (var property in data) {\r\n        var encodedKey = encodeURIComponent(property);\r\n        var encodedValue = encodeURIComponent(data[property]);\r\n        formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n    return formBody;\r\n}\r\n\r\n/// Checks if the current auth is invalid, null or expired\r\nexport function hasAuthExpired(auth) {\r\n    return auth === null || (auth != null && auth.expireDate < Date.now());\r\n}","import {\r\n    SPOTIFY_CLIENT_ID,\r\n    SPOTIFY_CODE_VERIFIER,\r\n    SPOTIFY_REFRESH_MINUTES,\r\n    REQUEST_TIMEOUT_MS,\r\n    PROXY_URL,\r\n    HOMEPAGE,\r\n} from \"../consts\";\r\nimport {\r\n    isDev\r\n} from \"../helpers/devHelper\";\r\nimport axios from \"axios\";\r\nimport sha256 from 'crypto-js/sha256';\r\nimport Base64 from 'crypto-js/enc-base64';\r\nimport { urlEncodeData } from \"../helpers/spotifyHelper\";\r\n\r\nconst SpotifyService = {\r\n    /// Generates an Spotify auth uri for the PKCE auth flow\r\n    /// https://developer.spotify.com/documentation/general/guides/authorization-guide/#authorization-code-flow-with-proof-key-for-code-exchange-pkce\r\n    getPKCEAuthUri: function () {\r\n        let responseType = \"code\";\r\n        let baseUrl = isDev() ? \"http://localhost:3000\" : HOMEPAGE;\r\n        let redirectUri = encodeURIComponent(baseUrl + \"/callback\");\r\n        let scopes = [\r\n            'streaming',\r\n            'user-read-currently-playing',\r\n            'user-read-playback-state',\r\n            'user-modify-playback-state',\r\n            'app-remote-control',\r\n            'user-read-email',\r\n            'user-read-private',\r\n        ];\r\n        let scopesEncoded = encodeURIComponent(scopes.join(' '));\r\n        \r\n        let challenge = this.encodePKCEChallenge(SPOTIFY_CODE_VERIFIER);\r\n        let codeChallengeMethod = challenge.method;\r\n        let codeChallenge = challenge.challenge;\r\n\r\n        let appState = \"jhkmsdgfiudf3243\";\r\n        let params = [\r\n            `response_type=${responseType}`,\r\n            `client_id=${SPOTIFY_CLIENT_ID}`,\r\n            `redirect_uri=${redirectUri}`,\r\n            `code_challenge=${codeChallenge}`,\r\n            `code_challenge_method=${codeChallengeMethod}`,\r\n            `state=${appState}`,\r\n            `scope=${scopesEncoded}`,\r\n        ];\r\n\r\n        let endpoint = \"https://accounts.spotify.com/authorize\";\r\n        return endpoint + \"?\" + params.join(\"&\");\r\n    },\r\n\r\n    /// Encodes a code verifier into a code challenge using SHA256, encoded into base64\r\n    encodePKCEChallenge: function (verifier) {\r\n        let sha = sha256(verifier);\r\n        let base64 = Base64.stringify(sha).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\r\n        return {\r\n            method: \"S256\",\r\n            challenge: base64,\r\n        };\r\n    },\r\n\r\n    /// Exchanges the PKCE code and responds with relevant encoded data\r\n    /// Callback for handling recieving final Spotify auth\r\n    exchangePKCECode: function (pkceCode, authCallback) {\r\n        let baseUrl = isDev() ? \"http://localhost:3000\" : HOMEPAGE;\r\n        let redirectUri = baseUrl + \"/callback\";\r\n\r\n        let encodedBody = urlEncodeData({\r\n            grant_type: encodeURIComponent('authorization_code'),\r\n            client_id: encodeURIComponent(SPOTIFY_CLIENT_ID),\r\n            code: encodeURIComponent(pkceCode),\r\n            redirect_uri: redirectUri,\r\n            code_verifier: encodeURIComponent(SPOTIFY_CODE_VERIFIER),\r\n        });\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'https://accounts.spotify.com/api/token',\r\n            headers: { \r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\r\n            },\r\n            data: encodedBody,\r\n            timeout: REQUEST_TIMEOUT_MS,\r\n        }).then(result => {\r\n            if(authCallback)\r\n                authCallback(result.data);\r\n        }).catch(error => {\r\n            console.error(error);\r\n            console.error(error.response.data);\r\n        });\r\n    },\r\n\r\n    /// Parses auth from Spotify into a better object\r\n    parseAuth: function (data) {\r\n        if(!data) {\r\n            return null;\r\n        }\r\n        \r\n        let expiresSeconds = data.expires_in;\r\n        /// Uncomment following to debug refreshing auth and having stable site state\r\n        // let minutes = 2;\r\n        // expiresSeconds = (SPOTIFY_REFRESH_MINUTES * 60) + minutes * 60;\r\n        let authExpireTime = this.getAuthExpireTime(expiresSeconds);\r\n        let scopes = data.scope.split(' ');\r\n\r\n        return {\r\n            authToken: data.access_token,\r\n            tokenType: data.token_type,\r\n            scopes: scopes,\r\n            refreshToken:  data.refresh_token,\r\n\r\n            expireDate: authExpireTime,\r\n        };\r\n    },\r\n\r\n    /// Refreshes old authentification using a refresh token\r\n    /// Callback for handling recieveing new Spotify auth\r\n    refreshAuth: function (refreshToken, authCallback) {\r\n        if(refreshToken) {\r\n            let encodedData = urlEncodeData({\r\n                grant_type: encodeURIComponent(\"refresh_token\"),\r\n                refresh_token: refreshToken,\r\n                client_id: encodeURIComponent(SPOTIFY_CLIENT_ID),\r\n            });\r\n\r\n            axios({\r\n                method: 'POST',\r\n                url: 'https://accounts.spotify.com/api/token',\r\n                headers: { \r\n                    'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\r\n                },\r\n                data: encodedData,\r\n                timeout: REQUEST_TIMEOUT_MS,\r\n            }).then(result => {\r\n                if(authCallback)\r\n                    authCallback(result.data);\r\n            }).catch(error => {\r\n               this.handleApiError(error);\r\n            });\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /// Debug with more info any API errors\r\n    handleApiError: function (error, apiPath) {\r\n        console.error(`Spotify API Error: '${apiPath}': '${error?.response?.data?.error?.message ?? error}'`);\r\n    },\r\n\r\n    // Gets the date plus the amount of seconds added on\r\n    getAuthExpireTime: function (seconds) {\r\n        return new Date(Date.now() + seconds * 1000);\r\n    },\r\n\r\n    makeApiRequest: function (method, url, authToken, callback) {\r\n        axios({\r\n            method: method,\r\n            url: url,\r\n            headers: { \r\n                'Authorization': 'Bearer ' + authToken,\r\n            },\r\n            timeout: REQUEST_TIMEOUT_MS,\r\n        }).then(result => {\r\n            if(callback)\r\n                callback(result.data);\r\n        }).catch(error => {\r\n            this.handleApiError(error, url);\r\n        });\r\n    },\r\n\r\n    /// Gets the current playback state of Spotify\r\n    getCurrentPlaybackState: function (apiToken, callback) {\r\n        var endpointUrl = \"https://api.spotify.com/v1/me/player/\";\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: endpointUrl,\r\n            headers: { \r\n                'Authorization': 'Bearer ' + apiToken,\r\n            },\r\n            timeout: REQUEST_TIMEOUT_MS,\r\n        }).then(result => {\r\n            if(callback) {\r\n                callback(result.data);\r\n            }\r\n        }).catch(error => {\r\n            this.handleApiError(error);\r\n        });\r\n    },\r\n\r\n    /// Pauses the current track\r\n    pause: function (authToken) {\r\n        let endpointUrl = PROXY_URL + \"https://api.spotify.com/v1/me/player/pause\";\r\n        this.makeApiRequest(\"PUT\", endpointUrl, authToken);\r\n    },\r\n\r\n    /// Plays the current track\r\n    play: function(authToken) {\r\n        let endpointUrl = PROXY_URL + \"https://api.spotify.com/v1/me/player/play\";\r\n        this.makeApiRequest(\"PUT\", endpointUrl, authToken);\r\n    },\r\n\r\n    /// Changes current track to the previous \r\n    previousTrack: function (authToken) {\r\n        let url = PROXY_URL + \"https://api.spotify.com/v1/me/player/previous\";\r\n        this.makeApiRequest(\"POST\", url, authToken);\r\n    },\r\n\r\n    /// Skips to the next track\r\n    nextTrack: function (authToken) {\r\n        let url = PROXY_URL + \"https://api.spotify.com/v1/me/player/next\";\r\n        this.makeApiRequest(\"POST\", url, authToken);\r\n    },\r\n\r\n    /// Sets the current device's volume\r\n    setVolume: function (authToken, volume) {\r\n        let url = PROXY_URL + \"https://api.spotify.com/v1/me/player/volume\";\r\n        url += \"?volume_percent=\" + volume;\r\n        this.makeApiRequest(\"PUT\", url, authToken);\r\n    },\r\n\r\n    /// Seeks to a certain ms position in the current song\r\n    seek: function (authToken, positionMs) {\r\n        let url  = PROXY_URL + \"https://api.spotify.com/v1/me/player/seek\";\r\n        url += \"?position_ms=\" + positionMs;\r\n        this.makeApiRequest(\"PUT\", url, authToken);\r\n    }\r\n\r\n}\r\n\r\nexport default SpotifyService;","class Cookies {\r\n    static setCookie(cname, cvalue, exdays) {\r\n        var d = new Date();\r\n        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n        var expires = \"expires=\"+d.toUTCString();\r\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/;\";\r\n    }\r\n\r\n    static getCookie(cname) {\r\n        var name = cname + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for(var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // deletes a specific cookie by it's name\r\n    static deleteCookie(name) {\r\n        var cookies = document.cookie;\r\n        var ca = cookies.split(';');\r\n        var index = -1;\r\n        for( var i = 0; i < ca.length; i++ ) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                index = i;\r\n            }\r\n        }\r\n\r\n        ca.splice(index, 1);\r\n        document.cookie = ca.join(';');\r\n    }\r\n  \r\n    static checkCookie(cname) {\r\n        var hasCookie = Cookies.getCookie(cname);\r\n        return hasCookie !== \"\";\r\n    }\r\n}\r\n\r\nexport default Cookies;\r\n\r\n// Cookie names used to store cookies\r\nexport const EGenifyCookieNames = {\r\n    // Stores JSON stringified of last auth\r\n    SPOTIFY_AUTH: \"spotify-auth\",\r\n};","import Home from \"./Home\";\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { \r\n    Container,\r\n    Button,\r\n    Row,\r\n    Toast\r\n} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter, faSpotify } from '@fortawesome/free-brands-svg-icons';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport SpotifyService from \"../../services/spotify\";\r\nimport Cookies, { EGenifyCookieNames } from \"../../helpers/cookieHelper\";\r\n\r\nimport \"./Home.css\";\r\n\r\n/// Handles converting an auth error code to an error message\r\nfunction getAuthMessage(authStatus) {\r\n    switch(authStatus)\r\n    {\r\n        case \"invalid\":\r\n            return \"A problem has occured trying to get the user auth. Please try again\";\r\n        case \"expired\":\r\n            return \"User's authorization has expired. Please sign in again\";\r\n        case \"refresh_error\":\r\n            return \"An error occured when attempting to refresh the previous Spotify auth. Please sign in again\";\r\n        default:\r\n            return \"Unknown error\";\r\n    }\r\n}\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Check if auth expired or invalid\r\n        var params = new URLSearchParams(this.props.location.search);\r\n        var authStatus = params.get('auth');\r\n\r\n        this.state = {\r\n            authStatus: authStatus,\r\n            showAuthError: authStatus !== null,\r\n            redirect: null,\r\n        };\r\n\r\n        this.onGetSpotifyAuth = this.onGetSpotifyAuth.bind(this);\r\n    }\r\n\r\n    onGetSpotifyAuth() {\r\n        let prevAuthStr = Cookies.getCookie(EGenifyCookieNames.SPOTIFY_AUTH);\r\n        let prevAuth = JSON.parse(prevAuthStr);\r\n        if (prevAuth !== null && prevAuth.refreshToken) {\r\n            this.setState({\r\n                redirect: \"/app\",\r\n            });\r\n        } else {\r\n            // No auth stored, ask for auth from the user\r\n            let url = SpotifyService.getPKCEAuthUri();\r\n            window.location = url;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center genify-home splash-gradiant text-white\">\r\n                <Row className=\"h-100 mx-0\">\r\n                    <Container className=\"my-auto\">\r\n                        <h1 \r\n                            style={{ fontSize: \"3rem\", fontWeight: \"300\" }}>\r\n                            Genify\r\n                        </h1>\r\n                        <h4 \r\n                            style={{ fontWeight: \"300\" }}\r\n                            className=\"py-2\">\r\n                            Combining music, lyrics and video\r\n                        </h4>\r\n                        <Button\r\n                            className=\"spotify-background py-2 px-5\"\r\n                            style={{ fontSize: \"1.25rem\", width: \"250px\" }}\r\n                            onClick={this.onGetSpotifyAuth}>\r\n                            <FontAwesomeIcon icon={faSpotify} className=\"mr-2\" />\r\n                            Sign In\r\n                        </Button>\r\n                        <div className=\"mx-auto mt-3\">\r\n                            <a href=\"https://joshlmao.com\" className=\"my-auto mr-2 text-white\">\r\n                                JoshLmao\r\n                            </a>\r\n                            <a href=\"https://twitter.com/joshlmao\">\r\n                                <Button \r\n                                    className=\"py-0 px-2\"\r\n                                    variant=\"outline-light\">\r\n                                    <FontAwesomeIcon icon={faTwitter} />\r\n                                </Button>\r\n                            </a>\r\n                        </div>\r\n                    </Container>\r\n                </Row>\r\n                {\r\n                    this.state.authStatus && \r\n                        <Toast \r\n                            show={this.state.showAuthError}\r\n                            onClose={() => this.setState({ showAuthError: false })}\r\n                            className=\"mr-2 mb-2 text-left\"\r\n                            style={{\r\n                                position: 'absolute',\r\n                                bottom: 0,\r\n                                right: 0,\r\n                                color: \"black\",\r\n                            }}>\r\n                            <Toast.Header>\r\n                                <strong className=\"mr-auto\">A Problem Occured</strong>\r\n                                {/* <small>11 mins ago</small> */}\r\n                            </Toast.Header>\r\n                            <Toast.Body>\r\n                                { getAuthMessage(this.state.authStatus) }\r\n                            </Toast.Body>\r\n                        </Toast>\r\n                }\r\n                {\r\n                    this.state.redirect && <Redirect to={this.state.redirect} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport {\r\n    Navbar,\r\n    Nav,\r\n    Container,\r\n    Button,\r\n    Modal,\r\n} from \"react-bootstrap\";\r\nimport { \r\n    faGithub,\r\n    faTwitter\r\n} from '@fortawesome/free-brands-svg-icons' ;\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nimport {\r\n    TWITTER_LINK,\r\n    GITHUB_LINK\r\n} from \"../../consts\";\r\n\r\nimport changelogs from \"../../json/changelog.json\";\r\nlet pkg = require('../../../package.json');\r\n\r\nclass Navigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            displayChangelog: false,\r\n        };\r\n\r\n        this.toggleChangelog = this.toggleChangelog.bind(this);\r\n    }\r\n\r\n    toggleChangelog() {\r\n        this.setState({\r\n            displayChangelog: !this.state.displayChangelog,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let modalBgColor = \"#111\";\r\n        let modalSeparatorColor = \"#222\";\r\n        return (\r\n            <div className=\"genify-navbar\">\r\n                <Navbar \r\n                    expand=\"sm\" \r\n                    style={{ backgroundColor: \"#111111\" }}>\r\n                    <Container>\r\n                        <Navbar.Brand href=\"/\" className=\"text-white\">Genify</Navbar.Brand>\r\n                        <Nav.Link \r\n                            className=\"p-0 align-bottom mt-1\"\r\n                            style={{ fontSize: \"0.85rem\" }}\r\n                            href=\"\" \r\n                            onClick={this.toggleChangelog}>\r\n                                {\r\n                                    pkg ? \"v\" + pkg.version : \"v0.0.0\"\r\n                                }\r\n                            </Nav.Link>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"ml-auto\">\r\n                                <Nav.Link className=\"py-0\" href={GITHUB_LINK}>\r\n                                    <Button variant=\"outline-secondary\">\r\n                                        <FontAwesomeIcon icon={faGithub} />\r\n                                    </Button>\r\n                                </Nav.Link>\r\n                                <Nav.Link className=\"py-0\" href={TWITTER_LINK}>\r\n                                    <Button variant=\"outline-secondary\">\r\n                                        <FontAwesomeIcon icon={faTwitter} />\r\n                                    </Button>\r\n                                </Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n                {\r\n                    this.state.displayChangelog &&\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.displayChangelog}\r\n                        onHide={() => this.toggleChangelog()}>\r\n                        <Modal.Header \r\n                            closeButton\r\n                            style={{ \r\n                                backgroundColor: modalBgColor,\r\n                                borderColor: modalSeparatorColor,\r\n                            }}>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                                Changelog\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body\r\n                            style={{ \r\n                                backgroundColor: modalBgColor,\r\n                                borderColor: modalSeparatorColor,\r\n                                fontSize: \"0.85rem\",\r\n                            }}>\r\n                            {   \r\n                                changelogs.logs.map((log) => {\r\n                                    return (\r\n                                        <div>\r\n                                            <h3>{log.version}</h3>\r\n                                            <ul>\r\n                                                {\r\n                                                    log.changes.map((change) => {\r\n                                                        return (\r\n                                                            <li>\r\n                                                                <ReactMarkdown source={change} className=\"no-child-margins\"/>\r\n                                                            </li>\r\n                                                        );\r\n                                                    })\r\n                                                }\r\n                                            </ul>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Modal.Body>\r\n                        <Modal.Footer\r\n                            style={{ \r\n                                backgroundColor: modalBgColor,\r\n                                borderColor: modalSeparatorColor,\r\n                            }}>\r\n                            <Button \r\n                                variant=\"outline-light\"\r\n                                className=\"ml-auto\" onClick={() => { this.toggleChangelog(); console.log(\"updating\"); }}>\r\n                                Close\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import Navigation from \"./Navigation\";\r\n\r\nexport default Navigation;","import FourOhFour from \"./FourOhFour\";\r\n\r\nexport default FourOhFour;","import React, { Component } from 'react';\r\nimport { Row, Container, Button } from \"react-bootstrap\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass FourOhFour extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            redirect: \"\",\r\n        };\r\n\r\n        this.onReturn = this.onReturn.bind(this);\r\n    }\r\n\r\n    onReturn() {\r\n        this.setState({\r\n            redirect: \"/\",\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row\r\n                className=\"w-100 spotify-black genify-home px-0\">\r\n                <Container className=\"pt-5\">\r\n                    <h2 className=\"text-center pt-5\">\r\n                        Error 404: Page Not Found\r\n                    </h2>\r\n                    <h6 className=\"text-center\">\r\n                        你迷路了吗？\r\n                    </h6>\r\n                    <div className=\"py-3\"></div>\r\n                    <h5 className=\"mx-auto\">\r\n                        This page can't be found. Are you sure you typed it in correctly?\r\n                    </h5>\r\n                    <div className=\"mx-auto\">\r\n                        <Button  className=\"mx-auto\"\r\n                            onClick={this.onReturn}\r\n                            variant=\"outline-light\">\r\n                                <FontAwesomeIcon \r\n                                    icon={faHome}\r\n                                    className=\"mr-2\" />\r\n                                Click here to get right back to the music\r\n                        </Button>\r\n                    </div>\r\n                </Container>\r\n                {\r\n                    this.state.redirect && <Redirect to={this.state.redirect}>here</Redirect>\r\n                }\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FourOhFour;","import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n    faStepBackward,\r\n    faStepForward,\r\n    faPause,\r\n    faPlay,\r\n    faVolumeMute,\r\n    faVolumeUp, \r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport RangeSlider from \"react-bootstrap-range-slider\";\r\n\r\nimport SpotifyService from '../../services/spotify';\r\nimport {\r\n    getFormattedArtists\r\n} from \"../../helpers/spotifyHelper\";\r\n\r\n// Formats total milliseconds to a displayable time format (like 00:00)\r\nfunction msToTime(millisec) {\r\n    var seconds = (millisec / 1000).toFixed(0);\r\n    var minutes = Math.floor(seconds / 60);\r\n    var hours = \"\";\r\n    if (minutes > 59) {\r\n        hours = Math.floor(minutes / 60);\r\n        hours = (hours >= 10) ? hours : \"0\" + hours;\r\n        minutes = minutes - (hours * 60);\r\n        minutes = (minutes >= 10) ? minutes : \"0\" + minutes;\r\n    }\r\n\r\n    seconds = Math.floor(seconds % 60);\r\n    seconds = (seconds >= 10) ? seconds : \"0\" + seconds;\r\n    if (hours !== \"\") {\r\n        return hours + \":\" + minutes + \":\" + seconds;\r\n    }\r\n    return minutes + \":\" + seconds;\r\n}\r\n\r\n/// Gets the largest album art from Spotify\r\nfunction retrieveAlbumArt(playState) {\r\n    // Default img if no album art found\r\n    let url = \"https://via.placeholder.com/75\";\r\n    if (playState) {\r\n        if (playState.item.album && playState.item.album.images.length > 0) {   \r\n            // Get biggest (first) art\r\n            let image = playState.item.album.images[0];\r\n            url = image.url;\r\n        }\r\n    } \r\n\r\n    return url;\r\n}\r\n\r\nclass Player extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            auth: props.auth,\r\n            playState: props.playState,\r\n\r\n            volumePercent: props.playState ? props.playState.device?.volume_percent : 0,\r\n            trackProgressMs: props.playState ? props.playState.progress_ms : 0,\r\n            isChangingTrackProgress: false,\r\n        };\r\n\r\n        this.onPlayPause = this.onPlayPause.bind(this);\r\n        this.onNextTrack = this.onNextTrack.bind(this);\r\n        this.onPreviousTrack = this.onPreviousTrack.bind(this);\r\n        this.onToggleVolumeMute = this.onToggleVolumeMute.bind(this);\r\n        this.onVolumeChanged = this.onVolumeChanged.bind(this);\r\n        this.onFinishVolumeChanged = this.onFinishVolumeChanged.bind(this);\r\n        this.onProgressChanged = this.onProgressChanged.bind(this);\r\n        this.onFinishProgressChanged = this.onFinishProgressChanged.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.playState !== this.props.playState) {\r\n            this.setState({\r\n                playState: this.props.playState,\r\n\r\n                volumePercent: this.props.playState?.device?.volume_percent,\r\n                trackProgressMs: this.props.playState?.progress_ms,\r\n            });\r\n        }\r\n\r\n        if(prevProps.auth !== this.props.auth) {\r\n            this.setState({\r\n                auth: this.props.auth,\r\n            });\r\n            console.log(\"Player Auth recieved update\");\r\n        }\r\n    }\r\n\r\n    onPlayPause() {\r\n        if (this.state.playState) {\r\n            if (this.state.playState.is_playing) {\r\n                SpotifyService.pause(this.state.auth.authToken);\r\n            } else {\r\n                SpotifyService.play(this.state.auth.authToken);\r\n            }\r\n        }\r\n    }\r\n\r\n    onNextTrack() {\r\n        SpotifyService.nextTrack(this.state.auth.authToken);\r\n    }\r\n    \r\n    onPreviousTrack() {\r\n        SpotifyService.previousTrack(this.state.auth.authToken);\r\n    }\r\n\r\n    onToggleVolumeMute() {\r\n        if (this.state.playState) {\r\n            if (this.state.playState.device?.volume_percent > 0) {\r\n                SpotifyService.setVolume(this.state.auth.authToken, 0);\r\n            } else {\r\n                SpotifyService.setVolume(this.state.auth.authToken, 25);\r\n            }\r\n        }\r\n    }\r\n    \r\n    onVolumeChanged(changedEvent) {\r\n        this.setState({\r\n            volumePercent: parseInt(changedEvent.target.value),\r\n        });\r\n    }\r\n\r\n    onFinishVolumeChanged() {\r\n        if(this.state.volumePercent !== this.state.playState.device?.volume_percent) {\r\n            console.log(\"Web API: Set volume to \" + this.state.volumePercent);\r\n            SpotifyService.setVolume(this.state.auth.authToken, this.state.volumePercent);\r\n        }\r\n    }\r\n\r\n    onProgressChanged (changedEvent) {\r\n        this.setState({\r\n            trackProgressMs: parseInt(changedEvent.target.value),\r\n        });\r\n\r\n        if (!this.state.isChangingTrackProgress) {\r\n            this.setState({ isChangingTrackProgress: true });\r\n        }\r\n    }\r\n\r\n    onFinishProgressChanged() {\r\n        if(this.state.playState) {\r\n            if (this.state.playState.progress_ms !== this.state.trackProgressMs) {\r\n                SpotifyService.seek(this.state.auth.authToken, this.state.trackProgressMs);\r\n            }\r\n        }\r\n\r\n        this.setState({ isChangingTrackProgress: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row \r\n                className=\"w-100 mx-0 genify-player\"\r\n                style={{ backgroundColor: \"rgb(40,40,40)\" }}>\r\n                {/* Album Art & Song Info */}\r\n                <Col\r\n                    xl={3}\r\n                    lg={3} \r\n                    md={4}\r\n                    sm={5}\r\n                    xs={12}>\r\n                    <div className=\"d-flex align-items-center my-auto\">\r\n                        {\r\n                            this.state.playState &&\r\n                            <a \r\n                                href={ this.state.playState ? this.state.playState.item?.album?.external_urls?.spotify : \"#\" } \r\n                                className=\"ml-2 p-2\">\r\n                                <img \r\n                                    className=\"album-art\" \r\n                                    alt={ this.state.playState ? this.state.playState.item?.artists[0].name + \"Album Art\" : \"Unknown Album\" }\r\n                                    src={ retrieveAlbumArt(this.state.playState) }\r\n                                    style={{ maxWidth: \"75px\", maxHeight: \"75px\" }}></img>\r\n                            </a>\r\n                        }\r\n                        <div className=\"w-100 ml-2\">\r\n                            <a \r\n                                href={ this.state.playState ? this.state.playState.item?.external_urls?.spotify : \"#\" }>\r\n                                <h6 className=\"song-info\">\r\n                                    { this.state.playState ? this.state.playState.item?.name : \"\" }\r\n                                </h6>\r\n                            </a>\r\n                            {/* Artists */}\r\n                            <h6 className=\"song-info\">\r\n                                { this.state.playState ? getFormattedArtists(this.state.playState) : \"\" }\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n                    {   \r\n                        !this.state.playState && \r\n                        <div className=\"my-auto\">\r\n                            <h6>No song currently playing.</h6>\r\n                            <h6>Play a song to get started!</h6>\r\n                        </div>\r\n                    }\r\n                </Col>\r\n                {/* Media Controls */}\r\n                <Col \r\n                    xl={6}\r\n                    lg={6}\r\n                    md={5}\r\n                    sm={7}\r\n                    className=\"d-none d-sm-block my-auto\">\r\n                    <div className=\"d-flex align-items-center my-1\">\r\n                        <div className=\"mx-auto my-1\">\r\n                            <Button \r\n                                className=\"mx-2\"\r\n                                variant=\"outline-light\"\r\n                                onClick={this.onPreviousTrack}>\r\n                                <FontAwesomeIcon icon={faStepBackward} />\r\n                            </Button>\r\n                            <Button \r\n                                className=\"mx-2\"\r\n                                variant=\"outline-light\"\r\n                                onClick={this.onPlayPause}>\r\n                                <FontAwesomeIcon icon={this.state.playState?.is_playing ? faPause : faPlay} />\r\n                            </Button>\r\n                            <Button \r\n                                className=\"mx-2\"\r\n                                variant=\"outline-light\"\r\n                                onClick={this.onNextTrack}>\r\n                                <FontAwesomeIcon icon={faStepForward} />\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center my-1\">\r\n                            <h6 className=\"my-auto mx-2\">\r\n                                { this.state.playState && msToTime(this.state.isChangingTrackProgress ? this.state.trackProgressMs : this.state.playState.progress_ms) }    \r\n                                { !this.state.playState && \"0:00\" }\r\n                            </h6>\r\n                            <div \r\n                                className=\"w-100\"\r\n                                onMouseUp={this.onFinishProgressChanged}>\r\n                                <RangeSlider \r\n                                    value={this.state.trackProgressMs}\r\n                                    min={0}\r\n                                    max={this.state.playState ? this.state.playState.item?.duration_ms : 100}\r\n                                    onChange={this.onProgressChanged}\r\n                                    tooltip=\"off\"\r\n                                    />\r\n                            </div>\r\n                            <h6 className=\"my-auto mx-2\">\r\n                                { this.state.playState && msToTime(this.state.playState.item?.duration_ms) }\r\n                                { !this.state.playState && \"9:59\" }\r\n                            </h6>\r\n                        </div>\r\n                </Col>\r\n                {/* Volume, Devices */}\r\n                <Col \r\n                    xl={3}\r\n                    lg={3}\r\n                    md={3} \r\n                    className=\"d-none d-md-block my-auto\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <Button \r\n                            className=\"mx-2\"\r\n                            variant=\"outline-light\"\r\n                            onClick={this.onToggleVolumeMute}>\r\n                            <FontAwesomeIcon icon={this.state.volumePercent === 0 ? faVolumeMute : faVolumeUp} />\r\n                        </Button>\r\n                        <div \r\n                            onMouseUp={this.onFinishVolumeChanged}\r\n                            className=\"w-100\">\r\n                            <RangeSlider\r\n                                value={this.state.volumePercent}\r\n                                onChange={this.onVolumeChanged}\r\n                                tooltip=\"auto\"\r\n                                variant='primary' />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Player;","import Player from \"./Player\";\r\n\r\nexport default Player;","/// Enum of all supported languages to romanize/unromanize\r\nexport const ELanguages = {\r\n    NONE: \"none\",\r\n    ENG: \"english\",\r\n    SZH: \"simplified-chinese\",\r\n    TZH: \"traditional-chinese\",\r\n    KR: \"korean\",\r\n    JP: \"japanese\",\r\n    RU: \"russian\",\r\n}\r\n\r\n/// Determines the primary majority language from a string\r\nexport function determineLanguage(str) {\r\n    let lang = ELanguages.NONE;\r\n\r\n    // Expression for detecting any Korean characters\r\n    var koreanChars = getKoreanChars(str);\r\n    if( koreanChars !== null ) { \r\n        lang = ELanguages.KR;\r\n    }\r\n    \r\n    // Detect both Chinese & Japanese\r\n    var japaneseChars = getJapaneseChars(str);\r\n    var chineseChars = getChineseChars(str);\r\n    // Determine language by seeing which contains the most characters \r\n    if( japaneseChars !== null && chineseChars !== null ) { \r\n        if( japaneseChars.length > chineseChars.length ) {\r\n            lang = ELanguages.JP;\r\n        } else {\r\n            lang = ELanguages.SZH;\r\n        }\r\n    } else if ( japaneseChars !== null ) {\r\n        lang = ELanguages.JP;\r\n    } else if( chineseChars !== null ) {\r\n        lang = \"chinese\";\r\n    }\r\n\r\n    var russianChars = getRussianChars(str);\r\n    if( russianChars !== null ) {\r\n        lang = ELanguages.RU;\r\n    }\r\n\r\n    // Detect if majority of chars are Simplified or Traditional\r\n    if( lang === \"chinese\" ) {\r\n        // Using to detect\r\n        // https://github.com/nickdrewe/traditional-or-simplified\r\n        //var result = TradOrSimp.detect(str);\r\n        // if (result.detectedCharacters === 'simplified') {\r\n        //     lang = ELanguages.SZH;\r\n        // } else {\r\n        //     lang = ELanguages.TZH;\r\n        // }\r\n        lang = ELanguages.SZH;\r\n    }\r\n    \r\n    // No other languages, set to English\r\n    if( koreanChars == null && japaneseChars == null && chineseChars == null && russianChars == null ) {\r\n        lang = ELanguages.ENG;\r\n    }\r\n\r\n    return lang;\r\n}\r\n\r\n// Returns an array of all Korean characters in string\r\nexport function getKoreanChars(str) {\r\n    return str.match(/[\\uac00-\\ud7af]|[\\u1100-\\u11ff]|[\\u3130-\\u318f]|[\\ua960-\\ua97f]|[\\ud7b0-\\ud7ff]/g);\r\n}\r\n\r\n// Matches Hirgana or Katakana (https://gist.github.com/oanhnn/9043867)\r\nexport function getJapaneseChars(str) {\r\n    return str.match(/[ぁ-んァ-ン]/g);\r\n}\r\n\r\n// Returns an array of all Chinese characters in string\r\nexport function getChineseChars(str) {\r\n    return str.match(/[\\u2E80-\\u2FD5\\u3190-\\u319f\\u3400-\\u4DBF\\u4E00-\\u9FCC\\uF900-\\uFAAD]/g);\r\n}\r\n\r\nexport function getRussianChars(str) {\r\n    return str.match(/^[аАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяЯ]+$/);\r\n}","/// Removes any brackets from inside a string\r\nexport function filterBrackets(str) {\r\n    return str.replace(/ *\\([^)]*\\) */g, \"\");\r\n}\r\n\r\n/// Removes any new line or spaces at start and end string\r\nexport function filterStartEndSpaceChars(str) {\r\n    return str.replace(/^\\s+|\\s+$/g, '');\r\n}\r\n\r\n/// Removes any special characters\r\nexport function filterSpecialChars(str) {\r\n    return str.replace(/[^\\w\\s]/gi, '');\r\n}\r\n\r\n// Replaces any special space characters with a \"normal\" space\r\nexport function filterSpecialSpace(str) {\r\n    return str.replace(/\\s/g, ' ');\r\n}\r\n\r\n/// Strips a string of common irrelevant chars and returns a lower case version\r\nexport function processString (str) {\r\n    // Replace any weird space chars \r\n    str = filterSpecialSpace(str);\r\n    // Remove any special chars\r\n    str = filterSpecialChars(str);\r\n\r\n    // Return lower case'd version\r\n    return str.toLowerCase();\r\n}","import axios from \"axios\";\r\nimport {\r\n    GENIUS_ACCESS_TOKEN,\r\n    REQUEST_TIMEOUT_MS,\r\n    PROXY_URL\r\n} from \"../consts\";\r\nimport { \r\n    filterBrackets,\r\n    filterStartEndSpaceChars,\r\n    processString\r\n} from \"../helpers/filterHelper\";\r\n\r\nconst GeniusService = {\r\n\r\n    /// Searches the Genius API using the spotify play context\r\n    search: function (playData, callback) {\r\n        if (!playData) \r\n            return null;\r\n\r\n        let filteredTitle = filterBrackets(playData.item.name);\r\n        let searchTerm = encodeURIComponent(`${filteredTitle} ${playData.item.artists[0].name}`);\r\n        let geniusUrl = PROXY_URL + \"https://api.genius.com/search?q=\" + searchTerm;\r\n        axios({\r\n            method: 'GET',\r\n            url: geniusUrl,\r\n            headers: { 'Authorization': 'Bearer ' + GENIUS_ACCESS_TOKEN },\r\n            timeout: REQUEST_TIMEOUT_MS,\r\n        }).then(result => {\r\n            if(callback) {\r\n                callback(result.data);\r\n            }\r\n        }).catch(error => {\r\n            console.error(error);\r\n        });\r\n    },\r\n\r\n    /// Parses HTML from a url and returns the page's lyrics\r\n    parseLyricsFromUrl(geniusUrl, callback) {\r\n        var url = PROXY_URL + geniusUrl + \"?react=1\";\r\n        axios({\r\n            method: 'GET',\r\n            url: url,\r\n            headers: { 'Authorization': 'Bearer ' + GENIUS_ACCESS_TOKEN },\r\n            timeout: REQUEST_TIMEOUT_MS,\r\n        }).then(result => {\r\n            if(callback) {\r\n                var parseHTML = function(str) {\r\n                    var tmp = document.implementation.createHTMLDocument();\r\n                    tmp.body.innerHTML = str;\r\n                    return tmp.body;\r\n                };\r\n                  \r\n                let allLyrics = \"\";\r\n\r\n                let html = parseHTML(result.request.responseText);\r\n                let isNewGeniusLayout = html.querySelectorAll(\".lyrics\").length <= 0;\r\n                if (isNewGeniusLayout) {\r\n                    // Using new Genius layout\r\n                    let allDivs = html.getElementsByTagName(\"div\");\r\n                    for(let div of allDivs) {\r\n                        let lowercase = div.className.toLowerCase();\r\n                        if(lowercase.includes(\"lyric\") && lowercase.includes(\"container\")) {\r\n                            //Get initial html content\r\n                            let innerHtml = div.innerHTML;\r\n                            // Remove line breaks used as line endings\r\n                            let brGone = innerHtml.replace(/<br>/g, '\\n');\r\n                            // Replace <div>...</div> content used for ads\r\n                            let aGone = brGone.replace(/<[^>]*>?/gm, '');\r\n                            allLyrics  += aGone;\r\n                        }\r\n                    }\r\n                    if (allLyrics) \r\n                    {\r\n                        let filteredLyrics = filterStartEndSpaceChars(allLyrics);\r\n                        callback(filteredLyrics);\r\n                    } else {\r\n                        console.error(`Unable to parse lyrics correctly from page ${url}`);\r\n                    }\r\n                } else {\r\n                    //Old Genius layout, use old algorithm\r\n                    let filtered = html.querySelectorAll(\".lyrics\");\r\n                    if (filtered.length > 0) \r\n                    {\r\n                        let filteredLyrics = filterStartEndSpaceChars(filtered[0].textContent);\r\n                        callback(filteredLyrics);\r\n                    }\r\n                    else\r\n                        console.error(\"Unable to parse lyrics from old Genius layout\");\r\n                }\r\n            }\r\n        }).catch(error => {\r\n            console.error(error);\r\n        });\r\n    },\r\n\r\n    /// Gets the most relevant result from a range of hits from the Genius API, \r\n    /// using the Spotify track 'item'\r\n    getRelevantResult: function (hits, trackInfo) {\r\n        if (!trackInfo) {\r\n            return;\r\n        }\r\n        if (hits && hits.length > 0) {\r\n            for(let hit of hits) {\r\n                // genius artist - track\r\n                var geniusArtist = processString(hit.result.primary_artist.name);\r\n                var geniusTrackName = processString(hit.result.title);\r\n                // spotify artist - track\r\n                var spotifyTrackName = processString(trackInfo.name);\r\n                var spotifyFirstArtistName = processString(trackInfo.artists[0].name);\r\n\r\n                // Check if Genius track name/artist includes Spotify track name/artist or vice versa\r\n                let geniusIncludes = geniusArtist.includes(spotifyFirstArtistName) && geniusTrackName.includes(spotifyTrackName);\r\n                let spotifyIncludes = spotifyFirstArtistName.includes(geniusArtist) && spotifyTrackName.includes(geniusTrackName);\r\n\r\n                if (geniusIncludes || spotifyIncludes) {\r\n                    return hit;\r\n                }\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n}\r\n\r\nexport default GeniusService;","import React, { Component } from 'react';\r\nimport {\r\n    Button, \r\n    Form\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n    determineLanguage,\r\n    ELanguages\r\n} from \"../../helpers/languageHelper\";\r\n\r\nimport Kuroshiro from \"kuroshiro\";\r\nimport KuromojiAnalyzer from \"kuroshiro-analyzer-kuromoji\";\r\nimport pinyin4js from 'pinyin4js';\r\nimport Aromanize from \"aromanize\";\r\nimport cyrillicToTranslit from \"cyrillic-to-translit-js\";\r\n\r\nimport GeniusService from '../../services/genius';\r\nimport \"./Lyrics.css\";\r\n\r\nclass Lyrics extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const kuroshiro = new Kuroshiro();\r\n        kuroshiro.init(new KuromojiAnalyzer({ \r\n            // Path starts at base of public folder\r\n            dictPath: \"./dict\" \r\n        }));\r\n\r\n        this.state = {\r\n            // Current playState of Spotify\r\n            playState: props.playState,\r\n\r\n            originalLyrics: null,\r\n            romanizedLyrics: null,\r\n\r\n            // Current lyrics that are loaded, the spotify track info\r\n            lyricsSpotifyTrackName: null,\r\n            // Current lyrics info from Genius\r\n            lyricsInfo: null,\r\n            // Are the lyrics loaded\r\n            loaded: true,\r\n            /// Are the current romanizedLyrics romanized or not?\r\n            isRomanized: false,\r\n            /// Current determined language of the original lyric language\r\n            originalLyricLanguage: ELanguages.NONE,\r\n            // Kuroshiro object for using Kuroshiro functions\r\n            kuroshiro: kuroshiro,\r\n            // Should lyrics perform an update/search for (new) lyrics\r\n            shouldUpdateLyrics: true,\r\n        };\r\n\r\n        this.updateLyrics = this.updateLyrics.bind(this);\r\n        this.onToggleRomanize = this.onToggleRomanize.bind(this);\r\n        this.resetLyricState = this.resetLyricState.bind(this);\r\n        this.onRetryLyricsBtn = this.onRetryLyricsBtn.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.playState !== this.props.playState) {\r\n            this.setState({\r\n                playState: this.props.playState,\r\n            },() => {\r\n                // prevProps hasnt been set or song changed\r\n                if (prevProps.playState === null || prevProps.playState?.item?.name !== this.props.playState.item?.name) {\r\n                    this.updateLyrics();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    updateLyrics() {\r\n        // Only continue if we have a valid state and isn't loading other lyrics\r\n        if(this.state.playState && this.state.loaded) {\r\n            this.setState({ \r\n                loaded: false, \r\n                shouldUpdateLyrics: false,\r\n                lyricsSpotifyTrackName: null,\r\n            });\r\n\r\n            GeniusService.search(this.state.playState, (result) => {\r\n                if(result.response.hits.length > 0) {\r\n                    // Search hits for most relevant result\r\n                    let info = GeniusService.getRelevantResult(result.response.hits, this.state.playState.item);\r\n                    if (info) {\r\n                        // Relevant Genius lyrics found\r\n                        console.log(`Relevant Result: ${info.result.full_title}`);\r\n                        GeniusService.parseLyricsFromUrl(info.result.url, (lyrics) => {\r\n                            console.log(`Loaded and set lyrics from ${info.result.url}`);\r\n                            let origLyricLang = determineLanguage(lyrics);\r\n                            console.log(`Original lyrics language: '${origLyricLang}'`);\r\n                            this.setState({\r\n                                originalLyrics: lyrics,\r\n                                romanizedLyrics: lyrics,\r\n                                isRomanized: false,\r\n\r\n                                originalLyricLanguage: origLyricLang,\r\n\r\n                                lyricsInfo: info,\r\n                                loaded: true,\r\n                                lyricsSpotifyTrackName: this.state.playState.item,\r\n                            });\r\n                        });\r\n                    } else {\r\n                        // No relevant Genius lyrics found\r\n                        console.log(`No related lyrics found out of '${result.response.hits.length}' results for song '${this.state.playState.item.artists[0].name} - ${this.state.playState.item.name}'`);\r\n                        this.setState({\r\n                            loaded: true,\r\n                        });\r\n                        this.resetLyricState();\r\n                    }\r\n                } else {\r\n                    // No search hits found at all\r\n                    console.log(\"Didn't find any search results on Genius\");\r\n                    this.setState({\r\n                        loaded: true,\r\n                    });\r\n                    this.resetLyricState();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    resetLyricState() {\r\n        this.setState({\r\n            originalLyrics: null,\r\n            romanizedLyrics: null,\r\n            lyricsInfo: null,\r\n            isRomanized: false,\r\n            originalLyricLanguage: ELanguages.NONE,\r\n        });\r\n    }\r\n\r\n    onToggleRomanize() {\r\n        if (!this.state.originalLyrics) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.isRomanized) {\r\n            this.setState({\r\n                romanizedLyrics: this.state.originalLyrics,\r\n            });\r\n        } else {\r\n            let romanizedLyrics = \"\";\r\n            switch(this.state.originalLyricLanguage)\r\n            {\r\n                case ELanguages.JP:\r\n                    {\r\n                        if (!this.state.kuroshiro) { break; }\r\n                        romanizedLyrics = \"...\";\r\n                        this.state.kuroshiro.convert(this.state.originalLyrics, { \r\n                            to: \"romaji\",\r\n                            mode: \"spaced\",\r\n                        }).then((romajiLyrics) => {\r\n                            // remove double space added inbetween other phrases\r\n                            romajiLyrics = romajiLyrics.replace(/ +(?= )/g,'');\r\n                            this.setState({\r\n                                romanizedLyrics: romajiLyrics,\r\n                            });\r\n                        });\r\n                        break;\r\n                    }\r\n                    case ELanguages.SZH:\r\n                    case ELanguages.TZH:\r\n                        {\r\n                            romanizedLyrics = pinyin4js.convertToPinyinString(this.state.originalLyrics, ' ', pinyin4js.WITH_TONE_MARK)\r\n                            break;\r\n                        }\r\n                    case ELanguages.KR:\r\n                        {\r\n                            romanizedLyrics = Aromanize.romanize(this.state.originalLyrics);\r\n                            break;\r\n                        }\r\n                    case ELanguages.RU:\r\n                        {\r\n                            romanizedLyrics = cyrillicToTranslit().transform(this.state.originalLyrics, \" \");\r\n                            break;\r\n                        }\r\n                default:\r\n                    break;\r\n            }\r\n            this.setState({\r\n                romanizedLyrics: romanizedLyrics,\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            isRomanized: !this.state.isRomanized,\r\n        });\r\n    }\r\n\r\n    onRetryLyricsBtn() {\r\n        if (!this.state.shouldUpdateLyrics) {\r\n            this.setState({ shouldUpdateLyrics: true }, () => this.updateLyrics() );\r\n            console.log(\"Retrying lyrics at request of user\");\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"w-100 lyrics-container py-2\">\r\n                <div className=\"text-center h-100\">\r\n                    {\r\n                        !this.state.loaded && <FontAwesomeIcon className=\"fa-spin\" size=\"3x\" icon={faSpinner} />\r\n                    }\r\n                    {/* Lyrics container */}\r\n                    {\r\n                        this.state.romanizedLyrics && this.state.loaded &&\r\n                        <div className=\"h-100\">\r\n                             <div \r\n                                    className=\"pr-5 mb-2 text-right d-none d-sm-block\"\r\n                                    style={{ \r\n                                        height: \"35px\", \r\n                                        position: \"absolute\", \r\n                                        right: 0,\r\n                                        fontSize: \"0.8rem\",\r\n                                        }}>\r\n                                        <h6 className=\"mb-1\">Lyric Info</h6>\r\n                                        <a \r\n                                            href={this.state.lyricsInfo.result.url}\r\n                                            className=\"py-1\">\r\n                                            {this.state.lyricsInfo.result.full_title}\r\n                                        </a>\r\n                                        {\r\n                                            this.state.originalLyricLanguage !== ELanguages.ENG && \r\n                                            <Form>\r\n                                                <Form.Check\r\n                                                    type=\"switch\"\r\n                                                    id=\"custom-switch\"\r\n                                                    label=\"Romanize\"\r\n                                                    onChange={this.onToggleRomanize}>\r\n                                                </Form.Check>\r\n                                            </Form>\r\n                                            \r\n                                        }\r\n                                </div>\r\n                                <div className=\"lyrics-content\" >\r\n                                    { this.state.romanizedLyrics }\r\n                                </div>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        !this.state.originalLyrics && this.state.loaded && \r\n                        <div className=\"d-flex flex-column\">\r\n                            <a href=\"https://genius.com/new\">\r\n                                <Button variant=\"outline-light\" className=\"mt-2\"> \r\n                                    Add to Genius\r\n                                </Button>\r\n                            </a>\r\n                            <Button \r\n                                className=\"mx-auto my-2\"\r\n                                variant=\"outline-light\" \r\n                                onClick={this.onRetryLyricsBtn}>\r\n                                Retry Lyrics\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lyrics;","import Service from \"./Service\";\r\n\r\nexport default Service;","import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Toast,\r\n} from \"react-bootstrap\";\r\nimport {\r\n    PLAYER_UPDATE_MS,\r\n    SPOTIFY_REFRESH_MINUTES\r\n} from \"../../consts\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Player from \"../Player\";\r\nimport SpotifyService from \"../../services/spotify\";\r\nimport { hasAuthExpired } from \"../../helpers/spotifyHelper\";\r\nimport Cookies, { EGenifyCookieNames } from \"../../helpers/cookieHelper\";\r\nimport Lyrics from '../Lyrics/Lyrics';\r\n\r\nclass Service extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Retrieve saved auth in cookies\r\n        let redirect = \"\";\r\n        let authStringified = Cookies.getCookie(EGenifyCookieNames.SPOTIFY_AUTH);\r\n        let auth = JSON.parse(authStringified);\r\n        let isRefreshing = false;\r\n        if (auth === null) {\r\n            redirect = \"/?auth=invalid\";\r\n            console.log(\"No or auth found in cookies, going home\");\r\n        } else {\r\n            auth.expireDate = new Date(auth.expireDate);\r\n\r\n            // Check if auth has expired\r\n            if (auth.expireDate < Date.now()) {\r\n                // If auth has a refresh token, use it to refresh otherwise delete and redirect user to home\r\n                if(auth.refreshToken) {\r\n                    console.log(`Auth expired at '${auth.expireDate.toLocaleString()}'. Using refreshToken to get new auth'`);\r\n                    isRefreshing = true;\r\n                    this.refreshAuth(auth.refreshToken);\r\n                } else {\r\n                    Cookies.deleteCookie(EGenifyCookieNames.SPOTIFY_AUTH);\r\n                    redirect = \"/?auth=expired\";\r\n                    console.log(\"Auth found but has expired\");\r\n                }\r\n            } else {\r\n                console.log(`Auth found. Expires at '${auth.expireDate.toLocaleString()}'`);\r\n            }\r\n        }\r\n\r\n        this.state = {\r\n            auth: auth,\r\n            isRefreshingAuth: isRefreshing,\r\n            /// Timeout handle for auto refreshing auth\r\n            refreshAuthRoutine: null,\r\n            /// Interval handle for updating the current Spotify context\r\n            spotifyUpdateRoutine: null,\r\n\r\n            infoMessage: \"\",\r\n            showInfoMessage: false,\r\n\r\n            redirect: redirect,\r\n        };\r\n\r\n        this.initService = this.initService.bind(this);\r\n        this.refreshAuth = this.refreshAuth.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        // If contains no auth and not refreshing, return home\r\n        if(this.state.auth === null && !this.state.isRefreshingAuth) {\r\n            this.setState({ redirect: \"/?auth=invalid\" });\r\n        }\r\n            \r\n        /// If contains a previous auth that is within expiry\r\n        if (this.state.auth !== null && !this.state.isRefreshingAuth) {\r\n            this.initService();\r\n        }\r\n    }\r\n\r\n    /// Initializes the service to perform the relevant actions on start\r\n    initService () {\r\n        // Get inital Spotify track status\r\n        SpotifyService.getCurrentPlaybackState(this.state.auth.authToken, (data) => {\r\n            // console.log(\"Initial State:\");\r\n            // console.log(data);\r\n            this.setState({\r\n                playState: data,\r\n                loaded: true,\r\n            });\r\n        });\r\n\r\n        if(!this.state.spotifyUpdateRoutine) {\r\n            // Start auto retrieval of Spotify track status\r\n            let spotifyUpdateRoutine = setInterval(() => {\r\n                if (hasAuthExpired(this.state.auth)) {\r\n                    return;\r\n                }\r\n                SpotifyService.getCurrentPlaybackState(this.state.auth.authToken, (data) => {\r\n                    // If track changed\r\n                    if (data.item?.name !== this.state.playState.item?.name) {\r\n                        console.log(`TRACK CHANGED | ${data.item.artists[0].name} - ${data.item?.name}`);\r\n                    }\r\n                    this.setState({\r\n                        playState: data,\r\n                    });\r\n                });\r\n            }, PLAYER_UPDATE_MS);\r\n\r\n            this.setState({ updateRoutine: spotifyUpdateRoutine });\r\n        }\r\n\r\n        if (!this.state.refreshAuthRoutine) {\r\n            let expireMs = this.state.auth.expireDate - new Date(Date.now());\r\n            let refreshAuthRoutine = setTimeout(() => {\r\n                console.log(`Auth will expire in ${SPOTIFY_REFRESH_MINUTES} minute(s). Refreshing...`);\r\n                this.setState({\r\n                    refreshAuthRoutine: null,\r\n                });\r\n                this.refreshAuth(this.state.auth.refreshToken);\r\n            }, expireMs - SPOTIFY_REFRESH_MINUTES * 60 * 1000);\r\n\r\n            this.setState({\r\n                refreshAuthRoutine: refreshAuthRoutine,\r\n            });\r\n        }\r\n    }\r\n\r\n    /// Performes a refresh of the current Spotify auth\r\n    refreshAuth (refreshToken) {\r\n        this.setState({\r\n            isRefreshingAuth: true,\r\n        });\r\n\r\n        SpotifyService.refreshAuth(refreshToken, (refreshedAuth) => {\r\n            let auth = SpotifyService.parseAuth(refreshedAuth);\r\n            if(auth) {\r\n                console.log(`Successfully refreshed auth. Expires at '${auth.expireDate.toLocaleString()}'`);\r\n                let stringified = JSON.stringify(auth);\r\n                Cookies.setCookie(EGenifyCookieNames.SPOTIFY_AUTH, stringified);\r\n            } else {\r\n                // Unable to refresh the previous auth\r\n                console.error(\"Error when trying to refresh auth\");\r\n                Cookies.deleteCookie(EGenifyCookieNames.SPOTIFY_AUTH);\r\n                this.setState({ redirect: \"/?auth=refresh_error\" })\r\n            }\r\n\r\n            this.setState({\r\n                isRefreshingAuth: false,\r\n                auth: auth,\r\n            }, () => {\r\n                this.initService();\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"genify-home spotify-black\">\r\n                <Row className=\"mx-0\">\r\n                    <Player \r\n                        playState={this.state.playState}\r\n                        auth={this.state.auth} />\r\n                </Row>\r\n                <Lyrics \r\n                    playState={this.state.playState} />\r\n                {\r\n                    this.state.infoMessage &&\r\n                    <Toast \r\n                        show={this.state.showInfoMessage}\r\n                        onClose={() => this.setState({ showInfoMessage: false })}\r\n                        className=\"mr-2 mb-2 text-left\"\r\n                        style={{\r\n                            position: 'absolute',\r\n                            bottom: 0,\r\n                            right: 0,\r\n                            color: \"black\",\r\n                        }}>\r\n                        <Toast.Header>\r\n                            <strong className=\"mr-auto\">Info</strong>\r\n                            {/* <small>11 mins ago</small> */}\r\n                        </Toast.Header>\r\n                        <Toast.Body>\r\n                            { this.state.infoMessage }\r\n                        </Toast.Body>\r\n                    </Toast>\r\n                }\r\n\r\n                {\r\n                    this.state.redirect && <Redirect to={this.state.redirect} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Service;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport Cookies, { EGenifyCookieNames } from \"../../helpers/cookieHelper\";\r\nimport SpotifyService from \"../../services/spotify\";\r\n\r\nclass Callback extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let exchangeData = { };\r\n        if (props.location?.search) {\r\n            /// Remove ? and split by params\r\n            let split = props.location.search.substring(1).split(\"&\");\r\n            if (split.length <= 2) {\r\n                for(let keyValue of split){\r\n                    let kvSplit = keyValue.split('=');\r\n                    if(keyValue.includes(\"code\")) {\r\n                        exchangeData.code = kvSplit[1];\r\n                    } else if(keyValue.includes(\"state\")) {\r\n                        exchangeData.state = kvSplit[1];\r\n                    } else if(keyValue.includes(\"error\")) {\r\n                        exchangeData.error = kvSplit[1];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.state = {\r\n            exchangeData: exchangeData,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.state.exchangeData) {\r\n            SpotifyService.exchangePKCECode(this.state.exchangeData.code, (authData) => {\r\n                let auth = SpotifyService.parseAuth(authData);\r\n                if(auth) {\r\n                    let stringified = JSON.stringify(auth);\r\n                    Cookies.setCookie(EGenifyCookieNames.SPOTIFY_AUTH, stringified);\r\n                   \r\n                    console.log(\"Successfully saved auth! Redirecting...\");\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            redirect: \"/app\",\r\n                        });\r\n                    }, 100);\r\n                } else {\r\n                    console.error(\"Unable to parse and save auth\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"h-100 w-100 spotify-black\">\r\n                <h3 className=\"text-center pt-5\">\r\n                    Redirecting...\r\n                </h3>\r\n                <div className=\"mx-auto\" style={{ width: \"50px\" }}>\r\n                    <FontAwesomeIcon \r\n                        className=\"fa-spin\"\r\n                        size=\"3x\" \r\n                        icon={faSpinner} />\r\n                </div>\r\n                {\r\n                    this.state.redirect && <Redirect to={this.state.redirect} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Callback;","import App from \"./App\";\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport { \r\n    Route,\r\n    Switch,\r\n    BrowserRouter\r\n} from 'react-router-dom';\r\n\r\nimport Home from \"../Home\";\r\nimport Navigation from \"../Navigation\";\r\nimport FourOhFour from \"../FourOhFour\";\r\nimport Service from \"../Service\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\nimport Callback from '../Callback/Callback';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <Navigation />\r\n\r\n                <Switch>\r\n                    {/* Homepage */}\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    {/* Main App service page */}\r\n                    <Route exact path=\"/app\" component={Service} />\r\n                    {/* Spotify callback for retrieving/parsing auth*/}\r\n                    <Route exact path=\"/callback\" component={Callback} />\r\n                    {/* 404 error page handling */}\r\n                    <Route component={FourOhFour} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './components/App';\r\nimport \"./index.css\";\r\n\r\nconst app = (\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root') );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}