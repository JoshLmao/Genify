{"version":3,"sources":["serviceWorker.js","consts.js","services/spotify.js","helpers/cookieHelper.js","components/Home/index.js","components/Home/Home.jsx","components/Navigation/Navigation.jsx","components/Navigation/index.js","components/FourOhFour/index.js","components/FourOhFour/FourOhFour.jsx","components/Player/Player.jsx","components/Player/index.js","helpers/spotifyHelper.js","helpers/languageHelper.js","helpers/filterHelper.js","services/genius.js","components/Lyrics/Lyrics.jsx","components/Service/index.js","components/Service/Service.jsx","components/Callback/Callback.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","GENIUS_ACCESS_TOKEN","PROXY_URL","SpotifyService","getUserAuthentificationUrl","redirectUri","encodeURIComponent","baseUrl","scopesEncoded","join","parseAuth","authData","split","length","substring","authToken","tokenType","expiresSeconds","expireDate","this","getAuthExpireTime","seconds","Date","now","getCurrentPlaybackState","apiToken","callback","axios","method","url","headers","timeout","then","result","data","catch","error","console","makeApiRequest","pause","play","previousTrack","nextTrack","setVolume","volume","seek","positionMs","Cookies","cname","cvalue","exdays","d","setTime","getTime","expires","toUTCString","document","cookie","name","ca","i","c","charAt","indexOf","index","splice","getCookie","EGenifyCookieNames","Home","props","authStatus","URLSearchParams","search","get","state","showAuthError","redirect","onGetSpotifyAuth","bind","oldAuth","expiryDate","setState","className","Row","Container","style","fontSize","fontWeight","Button","width","onClick","icon","faSpotify","href","variant","faTwitter","Toast","show","onClose","position","bottom","right","color","Header","Body","getAuthMessage","to","Component","pkg","require","Navigation","displayChangelog","toggleChangelog","Navbar","expand","backgroundColor","Brand","Nav","Link","version","Toggle","aria-controls","Collapse","id","faGithub","Modal","size","onHide","closeButton","borderColor","Title","changelogs","logs","map","log","changes","change","Footer","FourOhFour","onReturn","faHome","msToTime","millisec","toFixed","minutes","Math","floor","hours","Player","playState","volumePercent","device","volume_percent","trackProgressMs","progress_ms","isChangingTrackProgress","onPlayPause","onNextTrack","onPreviousTrack","onToggleVolumeMute","onVolumeChanged","onFinishVolumeChanged","onProgressChanged","onFinishProgressChanged","prevProps","is_playing","changedEvent","parseInt","target","value","Col","xl","lg","md","sm","xs","item","album","external_urls","spotify","alt","artists","src","images","maxWidth","maxHeight","allArtists","key","getFormattedArtists","faStepBackward","faPause","faPlay","faStepForward","onMouseUp","min","max","duration_ms","onChange","tooltip","faVolumeMute","faVolumeUp","ELanguages","filterBrackets","str","replace","filterStartEndSpaceChars","GeniusService","playData","filteredTitle","searchTerm","geniusUrl","parseLyricsFromUrl","allLyrics","html","tmp","implementation","createHTMLDocument","body","innerHTML","parseHTML","request","responseText","querySelectorAll","allDivs","getElementsByTagName","div","lowercase","toLowerCase","includes","filteredLyrics","filtered","textContent","getRelevantResult","hits","trackInfo","hit","geniusArtist","primary_artist","geniusTrackName","title","spotifyTrackName","spotifyFirstArtistName","Lyrics","kuroshiro","Kuroshiro","init","KuromojiAnalyzer","dictPath","originalLyrics","romanizedLyrics","lyricsSpotifyTrackName","lyricsInfo","loaded","isRomanized","originalLyricLanguage","updateLyrics","onToggleRomanize","resetLyricState","response","info","full_title","lyrics","origLyricLang","lang","koreanChars","getKoreanChars","japaneseChars","getJapaneseChars","chineseChars","getChineseChars","russianChars","getRussianChars","TradOrSimp","detect","detectedCharacters","determineLanguage","convert","mode","romajiLyrics","pinyin4js","convertToPinyinString","WITH_TONE_MARK","Aromanize","romanize","cyrillicToTranslit","transform","faSpinner","height","Form","Check","type","label","Service","authStringified","auth","JSON","parse","deleteCookie","toLocaleString","infoMessage","showInfoMessage","setInterval","expireMs","setTimeout","Callback","hash","stringified","stringify","setCookie","App","basename","process","exact","path","component","app","StrictMode","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.884f2f4a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/// Social Links\r\n/// Twitter\r\nexport const TWITTER_LINK = \"https://twitter.com/JoshLmao\";\r\n/// Repository github link\r\nexport const GITHUB_LINK = \"https://github.com/JoshLmao/Genify\";\r\n\r\n/// Client ID required for Spotify auth\r\nexport const SPOTIFY_CLIENT_ID = \"f4dc97c399124fc99254c5d7ac2bf4bd\";\r\n/// Access token for using Genius web api\r\nexport const GENIUS_ACCESS_TOKEN = \"jZPEvjdl6Sk1RJUDoo0tTuEFYv2B8rbosLsOUnFBqbi11dCtfftjiN911-a9q0lo\";\r\n\r\n/// Time in ms for all web requests with no response to timeout\r\nexport const REQUEST_TIMEOUT_MS = 30000;\r\n/// Time in ms that the Spotify player updates its play state\r\nexport const PLAYER_UPDATE_MS = 2000;\r\n/// Proxy URL to use to aviod CORS issue\r\nexport const PROXY_URL = \"https://genify-proxy.herokuapp.com/\";\r\n/// Mirror Homepage property in package.json. Used in services when can't access it\r\nexport const HOMEPAGE = \"https://genify.joshlmao.com\";","import {\r\n    SPOTIFY_CLIENT_ID,\r\n    REQUEST_TIMEOUT_MS,\r\n    PROXY_URL,\r\n    HOMEPAGE\r\n} from \"../consts\";\r\nimport {\r\n    isDev\r\n} from \"../helpers/devHelper\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst SpotifyService = {\r\n\r\n    /// Returns the auth url to redirect the user to\r\n    getUserAuthentificationUrl: function () {\r\n        let respType = \"token\";\r\n        let baseUrl = isDev() ? \"http://localhost:3000\" : HOMEPAGE;\r\n        let redirectUri = encodeURIComponent(baseUrl + \"/callback\");\r\n        let scopes = [\r\n            'streaming',\r\n            'user-read-currently-playing',\r\n            'user-read-playback-state',\r\n            'user-modify-playback-state',\r\n            'app-remote-control',\r\n            'user-read-email',\r\n            'user-read-private',\r\n        ];\r\n        let scopesEncoded = encodeURIComponent(scopes.join(' '));\r\n        let apiUrl = `https://accounts.spotify.com/authorize?client_id=${SPOTIFY_CLIENT_ID}&response_type=${respType}&redirect_uri=${redirectUri}&scope=${scopesEncoded}`;\r\n        return apiUrl;\r\n    },\r\n\r\n    /// Parses url auth from Spotify\r\n    parseAuth: function (authData) {\r\n        var split = authData.split(\"&\");\r\n        if (split.length === 2 && split[0].substring(0, 4) === \"error\") {\r\n            // Authorization was denied by user\r\n            return false;\r\n        } else {\r\n            var authToken = split[0].split(\"=\")[1];\r\n            var tokenType = split[1].substring(611);\r\n            var expiresSeconds = split[2].substring(11);\r\n\r\n            let authExpireTime = this.getAuthExpireTime(expiresSeconds);\r\n\r\n            // Save token info in cookies\r\n            // cookies.setCookie(\"authToken\", this.currentAuthToken);\r\n            // cookies.setCookie(\"expireDate\", this.authExpireTime);\r\n\r\n            // Find ms difference between the expire time and now\r\n            //var msDifference = authExpireTime - Date.now();\r\n            // Require auth once it has expired\r\n            // this.reauthThread = setTimeout(function() {\r\n            //     spotify.reaquireAuth();\r\n            // }, msDifference);\r\n\r\n\r\n            var obj = {\r\n                authToken: authToken,\r\n                tokenType: tokenType,\r\n                expireDate: authExpireTime,\r\n            };\r\n            return obj;\r\n        }\r\n    },\r\n\r\n    // Gets the date plus the amount of seconds added on\r\n    getAuthExpireTime: function (seconds) {\r\n        return new Date(Date.now() + seconds * 1000);\r\n    },\r\n\r\n    /// Gets the current playback state of Spotify\r\n    getCurrentPlaybackState: function (apiToken, callback) {\r\n        var endpointUrl = \"https://api.spotify.com/v1/me/player/\";\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: endpointUrl,\r\n            headers: { \r\n                'Authorization': 'Bearer ' + apiToken,\r\n            },\r\n            timeout: REQUEST_TIMEOUT_MS,\r\n        }).then(result => {\r\n            if(callback) {\r\n                callback(result.data);\r\n                //console.log(result.data);\r\n            }\r\n        }).catch(error => {\r\n            console.error(error);\r\n        });\r\n    },\r\n\r\n    makeApiRequest: function (method, url, authToken, callback) {\r\n        axios({\r\n            method: method,\r\n            url: url,\r\n            headers: { \r\n                'Authorization': 'Bearer ' + authToken,\r\n            },\r\n            timeout: REQUEST_TIMEOUT_MS,\r\n        }).then(result => {\r\n            if(callback)\r\n                callback(result.data);\r\n        }).catch(error => {\r\n            console.error(error);\r\n        });\r\n    },\r\n\r\n    /// Pauses the current track\r\n    pause: function (authToken) {\r\n        let endpointUrl = PROXY_URL + \"https://api.spotify.com/v1/me/player/pause\";\r\n        this.makeApiRequest(\"PUT\", endpointUrl, authToken);\r\n    },\r\n\r\n    /// Plays the current track\r\n    play: function(authToken) {\r\n        let endpointUrl = PROXY_URL + \"https://api.spotify.com/v1/me/player/play\";\r\n        this.makeApiRequest(\"PUT\", endpointUrl, authToken);\r\n    },\r\n\r\n    /// Changes current track to the previous \r\n    previousTrack: function (authToken) {\r\n        let url = PROXY_URL + \"https://api.spotify.com/v1/me/player/previous\";\r\n        this.makeApiRequest(\"POST\", url, authToken);\r\n    },\r\n\r\n    /// Skips to the next track\r\n    nextTrack: function (authToken) {\r\n        let url = PROXY_URL + \"https://api.spotify.com/v1/me/player/next\";\r\n        this.makeApiRequest(\"POST\", url, authToken);\r\n    },\r\n\r\n    /// Sets the current device's volume\r\n    setVolume: function (authToken, volume) {\r\n        let url = PROXY_URL + \"https://api.spotify.com/v1/me/player/volume\";\r\n        url += \"?volume_percent=\" + volume;\r\n        this.makeApiRequest(\"PUT\", url, authToken);\r\n    },\r\n\r\n    /// Seeks to a certain ms position in the current song\r\n    seek: function (authToken, positionMs) {\r\n        let url  = PROXY_URL + \"https://api.spotify.com/v1/me/player/seek\";\r\n        url += \"?position_ms=\" + positionMs;\r\n        this.makeApiRequest(\"PUT\", url, authToken);\r\n    }\r\n\r\n}\r\n\r\nexport default SpotifyService;","class Cookies {\r\n    static setCookie(cname, cvalue, exdays) {\r\n        var d = new Date();\r\n        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n        var expires = \"expires=\"+d.toUTCString();\r\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/;\";\r\n    }\r\n\r\n    static getCookie(cname) {\r\n        var name = cname + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for(var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // deletes a specific cookie by it's name\r\n    static deleteCookie(name) {\r\n        var cookies = document.cookie;\r\n        var ca = cookies.split(';');\r\n        var index = -1;\r\n        for( var i = 0; i < ca.length; i++ ) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                index = i;\r\n            }\r\n        }\r\n\r\n        ca.splice(index, 1);\r\n        document.cookie = ca.join(';');\r\n    }\r\n  \r\n    static checkCookie(cname) {\r\n        var hasCookie = Cookies.getCookie(cname);\r\n        return hasCookie !== \"\";\r\n    }\r\n}\r\n\r\nexport default Cookies;\r\n\r\n// Cookie names used to store cookies\r\nexport const EGenifyCookieNames = {\r\n    // Stores JSON stringified of last auth\r\n    SPOTIFY_AUTH: \"spotify-auth\",\r\n};","import Home from \"./Home\";\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { \r\n    Container,\r\n    Button,\r\n    Row,\r\n    Toast\r\n} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter, faSpotify } from '@fortawesome/free-brands-svg-icons';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport SpotifyService from \"../../services/spotify\";\r\nimport Cookies, { EGenifyCookieNames } from \"../../helpers/cookieHelper\";\r\n\r\nimport \"./Home.css\";\r\n\r\nfunction getAuthMessage(authStatus) {\r\n    switch(authStatus)\r\n    {\r\n        case \"invalid\":\r\n            return \"A problem has occured trying to get the user auth. Please try again\";\r\n        case \"expired\":\r\n            return \"User's authorization has expired. Please sign in again\";\r\n        default:\r\n            return \"Unknown error\";\r\n    }\r\n}\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Check if auth expired or invalid\r\n        var params = new URLSearchParams(this.props.location.search);\r\n        var authStatus = params.get('auth');\r\n\r\n        this.state = {\r\n            authStatus: authStatus,\r\n            showAuthError: authStatus !== null,\r\n            redirect: null,\r\n        };\r\n\r\n        this.onGetSpotifyAuth = this.onGetSpotifyAuth.bind(this);\r\n    }\r\n\r\n    onGetSpotifyAuth() {\r\n        let oldAuth = Cookies.getCookie(EGenifyCookieNames.SPOTIFY_AUTH);\r\n        if (oldAuth !== null && Date.now() < oldAuth.expiryDate) {\r\n            this.setState({\r\n                redirect: \"/app\",\r\n            });\r\n        } else {\r\n            // No auth stored, get new auth from user\r\n            let url = SpotifyService.getUserAuthentificationUrl();\r\n            window.location = url;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center genify-home splash-gradiant text-white\">\r\n                <Row className=\"h-100 mx-0\">\r\n                    <Container className=\"my-auto\">\r\n                        <h1 \r\n                            style={{ fontSize: \"3rem\", fontWeight: \"300\" }}>\r\n                            Genify\r\n                        </h1>\r\n                        <h4 \r\n                            style={{ fontWeight: \"300\" }}\r\n                            className=\"py-2\">\r\n                            Combining music, lyrics and video\r\n                        </h4>\r\n                        <Button\r\n                            className=\"spotify-background py-2 px-5\"\r\n                            style={{ fontSize: \"1.25rem\", width: \"250px\" }}\r\n                            onClick={this.onGetSpotifyAuth}>\r\n                            <FontAwesomeIcon icon={faSpotify} className=\"mr-2\" />\r\n                            Sign In\r\n                        </Button>\r\n                        <div className=\"mx-auto mt-3\">\r\n                            <a href=\"https://joshlmao.com\" className=\"my-auto mr-2 text-white\">\r\n                                JoshLmao\r\n                            </a>\r\n                            <a href=\"https://twitter.com/joshlmao\">\r\n                                <Button \r\n                                    className=\"py-0 px-2\"\r\n                                    variant=\"outline-light\">\r\n                                    <FontAwesomeIcon icon={faTwitter} />\r\n                                </Button>\r\n                            </a>\r\n                        </div>\r\n                    </Container>\r\n                </Row>\r\n                {\r\n                    this.state.authStatus && \r\n                        <Toast \r\n                            show={this.state.showAuthError}\r\n                            onClose={() => this.setState({ showAuthError: false })}\r\n                            className=\"mr-2 mb-2 text-left\"\r\n                            style={{\r\n                                position: 'absolute',\r\n                                bottom: 0,\r\n                                right: 0,\r\n                                color: \"black\",\r\n                            }}>\r\n                            <Toast.Header>\r\n                                <strong className=\"mr-auto\">A Problem Occured</strong>\r\n                                {/* <small>11 mins ago</small> */}\r\n                            </Toast.Header>\r\n                            <Toast.Body>\r\n                                { getAuthMessage(this.state.authStatus) }\r\n                            </Toast.Body>\r\n                        </Toast>\r\n                }\r\n                {\r\n                    this.state.redirect && <Redirect to={this.state.redirect} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport {\r\n    Navbar,\r\n    Nav,\r\n    Container,\r\n    Button,\r\n    Modal,\r\n} from \"react-bootstrap\";\r\nimport { \r\n    faGithub,\r\n    faTwitter\r\n} from '@fortawesome/free-brands-svg-icons' ;\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport {\r\n    TWITTER_LINK,\r\n    GITHUB_LINK\r\n} from \"../../consts\";\r\n\r\nimport changelogs from \"../../json/changelog.json\";\r\nlet pkg = require('../../../package.json');\r\n\r\nfunction getChangelog() {\r\n    return changelogs.logs.map((log) => {\r\n        return (\r\n            <div>\r\n                <h3>{log.version}</h3>\r\n                <ul>\r\n                    {\r\n                        log.changes.map((change) => {\r\n                            return (\r\n                                <li>{change}</li>\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    });\r\n}\r\n\r\nclass Navigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            displayChangelog: false,\r\n        };\r\n\r\n        this.toggleChangelog = this.toggleChangelog.bind(this);\r\n    }\r\n\r\n    toggleChangelog() {\r\n        this.setState({\r\n            displayChangelog: !this.state.displayChangelog,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let modalBgColor = \"#111\";\r\n        let modalSeparatorColor = \"#222\";\r\n        return (\r\n            <div className=\"genify-navbar\">\r\n                <Navbar \r\n                    expand=\"sm\" \r\n                    style={{ backgroundColor: \"#111111\" }}>\r\n                    <Container>\r\n                        <Navbar.Brand href=\"/\" className=\"text-white\">Genify</Navbar.Brand>\r\n                        <Nav.Link \r\n                            className=\"p-0 align-bottom mt-1\"\r\n                            style={{ fontSize: \"0.85rem\" }}\r\n                            href=\"\" \r\n                            onClick={this.toggleChangelog}>\r\n                                {\r\n                                    pkg ? \"v\" + pkg.version : \"v0.0.0\"\r\n                                }\r\n                            </Nav.Link>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"ml-auto\">\r\n                                <Nav.Link className=\"py-0\" href={GITHUB_LINK}>\r\n                                    <Button variant=\"outline-secondary\">\r\n                                        <FontAwesomeIcon icon={faGithub} />\r\n                                    </Button>\r\n                                </Nav.Link>\r\n                                <Nav.Link className=\"py-0\" href={TWITTER_LINK}>\r\n                                    <Button variant=\"outline-secondary\">\r\n                                        <FontAwesomeIcon icon={faTwitter} />\r\n                                    </Button>\r\n                                </Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n                {\r\n                    this.state.displayChangelog &&\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.displayChangelog}\r\n                        onHide={() => this.toggleChangelog()}>\r\n                        <Modal.Header \r\n                            closeButton\r\n                            style={{ \r\n                                backgroundColor: modalBgColor,\r\n                                borderColor: modalSeparatorColor,\r\n                            }}>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                                Changelog\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body\r\n                            style={{ \r\n                                backgroundColor: modalBgColor,\r\n                                borderColor: modalSeparatorColor,\r\n                            }}>\r\n                            {   \r\n                                getChangelog()\r\n                            }\r\n                        </Modal.Body>\r\n                        <Modal.Footer\r\n                            style={{ \r\n                                backgroundColor: modalBgColor,\r\n                                borderColor: modalSeparatorColor,\r\n                            }}>\r\n                            <Button \r\n                                variant=\"outline-light\"\r\n                                className=\"ml-auto\" onClick={() => this.toggleChangelog()}>\r\n                                Close\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import Navigation from \"./Navigation\";\r\n\r\nexport default Navigation;","import FourOhFour from \"./FourOhFour\";\r\n\r\nexport default FourOhFour;","import React, { Component } from 'react';\r\nimport { Row, Container, Button } from \"react-bootstrap\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass FourOhFour extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            redirect: \"\",\r\n        };\r\n\r\n        this.onReturn = this.onReturn.bind(this);\r\n    }\r\n\r\n    onReturn() {\r\n        this.setState({\r\n            redirect: \"/\",\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row\r\n                className=\"w-100 spotify-black genify-home px-0\">\r\n                <Container className=\"pt-5\">\r\n                    <h2 className=\"text-center pt-5\">\r\n                        Error 404: Page Not Found\r\n                    </h2>\r\n                    <h6 className=\"text-center\">\r\n                        你迷路了吗？\r\n                    </h6>\r\n                    <div className=\"py-3\"></div>\r\n                    <h5 className=\"mx-auto\">\r\n                        This page can't be found. Are you sure you typed it in correctly?\r\n                    </h5>\r\n                    <div className=\"mx-auto\">\r\n                        <Button  className=\"mx-auto\"\r\n                            onClick={this.onReturn}\r\n                            variant=\"outline-light\">\r\n                                <FontAwesomeIcon \r\n                                    icon={faHome}\r\n                                    className=\"mr-2\" />\r\n                                Click here to get right back to the music\r\n                        </Button>\r\n                    </div>\r\n                </Container>\r\n                {\r\n                    this.state.redirect && <Redirect to={this.state.redirect}>here</Redirect>\r\n                }\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FourOhFour;","import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n    faStepBackward,\r\n    faStepForward,\r\n    faPause,\r\n    faPlay,\r\n    faVolumeMute,\r\n    faVolumeUp, \r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport RangeSlider from \"react-bootstrap-range-slider\";\r\n\r\nimport SpotifyService from '../../services/spotify';\r\nimport {\r\n    getFormattedArtists\r\n} from \"../../helpers/spotifyHelper\";\r\n\r\n// Formats total milliseconds to a displayable time format (like 00:00)\r\nfunction msToTime(millisec) {\r\n    var seconds = (millisec / 1000).toFixed(0);\r\n    var minutes = Math.floor(seconds / 60);\r\n    var hours = \"\";\r\n    if (minutes > 59) {\r\n        hours = Math.floor(minutes / 60);\r\n        hours = (hours >= 10) ? hours : \"0\" + hours;\r\n        minutes = minutes - (hours * 60);\r\n        minutes = (minutes >= 10) ? minutes : \"0\" + minutes;\r\n    }\r\n\r\n    seconds = Math.floor(seconds % 60);\r\n    seconds = (seconds >= 10) ? seconds : \"0\" + seconds;\r\n    if (hours !== \"\") {\r\n        return hours + \":\" + minutes + \":\" + seconds;\r\n    }\r\n    return minutes + \":\" + seconds;\r\n}\r\n\r\nclass Player extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authToken: props.authToken,\r\n            playState: props.playState,\r\n\r\n            volumePercent: props.playState ? props.playState.device?.volume_percent : 0,\r\n            trackProgressMs: props.playState ? props.playState.progress_ms : 0,\r\n            isChangingTrackProgress: false,\r\n        };\r\n\r\n        this.onPlayPause = this.onPlayPause.bind(this);\r\n        this.onNextTrack = this.onNextTrack.bind(this);\r\n        this.onPreviousTrack = this.onPreviousTrack.bind(this);\r\n        this.onToggleVolumeMute = this.onToggleVolumeMute.bind(this);\r\n        this.onVolumeChanged = this.onVolumeChanged.bind(this);\r\n        this.onFinishVolumeChanged = this.onFinishVolumeChanged.bind(this);\r\n        this.onProgressChanged = this.onProgressChanged.bind(this);\r\n        this.onFinishProgressChanged = this.onFinishProgressChanged.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.playState !== this.props.playState) {\r\n            this.setState({\r\n                playState: this.props.playState,\r\n\r\n                volumePercent: this.props.playState?.device?.volume_percent,\r\n                trackProgressMs: this.props.playState?.progress_ms,\r\n            });\r\n        }\r\n\r\n        if(prevProps.authToken !== this.props.authToken) {\r\n            this.setState({\r\n                authToken: this.props.authToken,\r\n            });\r\n        }\r\n    }\r\n\r\n    onPlayPause() {\r\n        if (this.state.playState) {\r\n            if (this.state.playState.is_playing) {\r\n                SpotifyService.pause(this.state.authToken);\r\n            } else {\r\n                SpotifyService.play(this.state.authToken);\r\n            }\r\n        }\r\n    }\r\n\r\n    onNextTrack() {\r\n        SpotifyService.nextTrack(this.state.authToken);\r\n    }\r\n    \r\n    onPreviousTrack() {\r\n        SpotifyService.previousTrack(this.state.authToken);\r\n    }\r\n\r\n    onToggleVolumeMute() {\r\n        if (this.state.playState) {\r\n            if (this.state.playState.device?.volume_percent > 0) {\r\n                SpotifyService.setVolume(this.state.authToken, 0);\r\n            } else {\r\n                SpotifyService.setVolume(this.state.authToken, 25);\r\n            }\r\n        }\r\n    }\r\n    \r\n    onVolumeChanged(changedEvent) {\r\n        this.setState({\r\n            volumePercent: parseInt(changedEvent.target.value),\r\n        });\r\n    }\r\n\r\n    onFinishVolumeChanged() {\r\n        if(this.state.volumePercent !== this.state.playState.device?.volume_percent) {\r\n            console.log(\"Web API: Set volume to \" + this.state.volumePercent);\r\n            SpotifyService.setVolume(this.state.authToken, this.state.volumePercent);\r\n        }\r\n    }\r\n\r\n    onProgressChanged (changedEvent) {\r\n        this.setState({\r\n            trackProgressMs: parseInt(changedEvent.target.value),\r\n        });\r\n\r\n        if (!this.state.isChangingTrackProgress) {\r\n            this.setState({ isChangingTrackProgress: true });\r\n        }\r\n    }\r\n\r\n    onFinishProgressChanged() {\r\n        if(this.state.playState) {\r\n            if (this.state.playState.progress_ms !== this.state.trackProgressMs) {\r\n                SpotifyService.seek(this.state.authToken, this.state.trackProgressMs);\r\n            }\r\n        }\r\n\r\n        this.setState({ isChangingTrackProgress: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row \r\n                className=\"w-100 mx-0 genify-player\"\r\n                style={{ backgroundColor: \"rgb(40,40,40)\" }}>\r\n                {/* Album Art & Song Info */}\r\n                <Col\r\n                    xl={3}\r\n                    lg={3} \r\n                    md={4}\r\n                    sm={5}\r\n                    xs={12}>\r\n                    <div className=\"d-flex align-items-center my-auto\">\r\n                        <a \r\n                            href={ this.state.playState ? this.state.playState.item?.album?.external_urls?.spotify : \"#\" } \r\n                            className=\"ml-2 p-2\">\r\n                            <img \r\n                                className=\"album-art\" \r\n                                alt={ this.state.playState ? this.state.playState.item?.artists[0].name + \"Album Art\" : \"Unknown Album\" }\r\n                                src={ this.state.playState ? this.state.playState?.item?.album?.images[1].url : \"https://via.placeholder.com/75\" }\r\n                                style={{ maxWidth: \"75px\", maxHeight: \"75px\" }}></img>\r\n                        </a>\r\n                        <div className=\"w-100 ml-2\">\r\n                            <a \r\n                                href={ this.state.playState ? this.state.playState.item?.external_urls?.spotify : \"#\" }>\r\n                                <h6 className=\"song-info\">\r\n                                    { this.state.playState ? this.state.playState.item?.name : \"Unknown\" }\r\n                                </h6>\r\n                            </a>\r\n                            {/* Artists */}\r\n                            <h6 className=\"song-info\">\r\n                                { this.state.playState ? getFormattedArtists(this.state.playState) : \"Unknown\" }\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                {/* Media Controls */}\r\n                <Col \r\n                    xl={6}\r\n                    lg={6}\r\n                    md={5}\r\n                    sm={7}\r\n                    className=\"d-none d-sm-block my-auto\">\r\n                    <div className=\"d-flex align-items-center my-1\">\r\n                        <div className=\"mx-auto my-1\">\r\n                            <Button \r\n                                className=\"mx-2\"\r\n                                variant=\"outline-light\"\r\n                                onClick={this.onPreviousTrack}>\r\n                                <FontAwesomeIcon icon={faStepBackward} />\r\n                            </Button>\r\n                            <Button \r\n                                className=\"mx-2\"\r\n                                variant=\"outline-light\"\r\n                                onClick={this.onPlayPause}>\r\n                                <FontAwesomeIcon icon={this.state.playState?.is_playing ? faPause : faPlay} />\r\n                            </Button>\r\n                            <Button \r\n                                className=\"mx-2\"\r\n                                variant=\"outline-light\"\r\n                                onClick={this.onNextTrack}>\r\n                                <FontAwesomeIcon icon={faStepForward} />\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center my-1\">\r\n                            <h6 className=\"my-auto mx-2\">\r\n                                { this.state.playState && msToTime(this.state.isChangingTrackProgress ? this.state.trackProgressMs : this.state.playState.progress_ms) }    \r\n                                { !this.state.playState && \"0:00\" }\r\n                            </h6>\r\n                            <div \r\n                                className=\"w-100\"\r\n                                onMouseUp={this.onFinishProgressChanged}>\r\n                                <RangeSlider \r\n                                    value={this.state.trackProgressMs}\r\n                                    min={0}\r\n                                    max={this.state.playState ? this.state.playState.item?.duration_ms : 100}\r\n                                    onChange={this.onProgressChanged}\r\n                                    tooltip=\"off\"\r\n                                    />\r\n                            </div>\r\n                            <h6 className=\"my-auto mx-2\">\r\n                                { this.state.playState && msToTime(this.state.playState.item?.duration_ms) }\r\n                                { !this.state.playState && \"9:59\" }\r\n                            </h6>\r\n                        </div>\r\n                </Col>\r\n                {/* Volume, Devices */}\r\n                <Col \r\n                    xl={3}\r\n                    lg={3}\r\n                    md={3} \r\n                    className=\"d-none d-md-block my-auto\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <Button \r\n                            className=\"mx-2\"\r\n                            variant=\"outline-light\"\r\n                            onClick={this.onToggleVolumeMute}>\r\n                            <FontAwesomeIcon icon={this.state.volumePercent === 0 ? faVolumeMute : faVolumeUp} />\r\n                        </Button>\r\n                        <div \r\n                            onMouseUp={this.onFinishVolumeChanged}\r\n                            className=\"w-100\">\r\n                            <RangeSlider\r\n                                value={this.state.volumePercent}\r\n                                onChange={this.onVolumeChanged}\r\n                                tooltip=\"auto\"\r\n                                variant='primary' />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Player;","import Player from \"./Player\";\r\n\r\nexport default Player;","import React from 'react';\r\n\r\n// Gets a formatted string of all artists on one track, separated with a comma and correct hyperlinking\r\n// For example \"Enter Shikari, TWICE, KSI\"\r\nexport function getFormattedArtists (playState) {\r\n    if (!playState) {\r\n        return null;\r\n    }\r\n\r\n    let allArtists = playState.item?.artists;\r\n    if (allArtists) {\r\n        return (\r\n            <div className=\"d-flex\">\r\n                {\r\n                    allArtists.map((value, index) => {\r\n                        return (\r\n                        <div className=\"d-flex\" key={value.name}>\r\n                            <a  href={value.external_urls.spotify}>{value.name}</a> \r\n                            { index < allArtists.length - 1 && <div className=\"pr-1\"> ,</div> }\r\n                        </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n    return null;\r\n}","import TradOrSimp from \"traditional-or-simplified\";\r\n\r\n/// Enum of all supported languages to romanize/unromanize\r\nexport const ELanguages = {\r\n    NONE: \"none\",\r\n    ENG: \"english\",\r\n    SZH: \"simplified-chinese\",\r\n    TZH: \"traditional-chinese\",\r\n    KR: \"korean\",\r\n    JP: \"japanese\",\r\n    RU: \"russian\",\r\n}\r\n\r\n/// Determines the primary majority language from a string\r\nexport function determineLanguage(str) {\r\n    let lang = ELanguages.NONE;\r\n\r\n    // Expression for detecting any Korean characters\r\n    var koreanChars = getKoreanChars(str);\r\n    if( koreanChars !== null ) { \r\n        lang = ELanguages.KR;\r\n    }\r\n    \r\n    // Detect both Chinese & Japanese\r\n    var japaneseChars = getJapaneseChars(str);\r\n    var chineseChars = getChineseChars(str);\r\n    // Determine language by seeing which contains the most characters \r\n    if( japaneseChars !== null && chineseChars !== null ) { \r\n        if( japaneseChars.length > chineseChars.length ) {\r\n            lang = ELanguages.JP;\r\n        } else {\r\n            lang = ELanguages.SZH;\r\n        }\r\n    } else if ( japaneseChars !== null ) {\r\n        lang = ELanguages.JP;\r\n    } else if( chineseChars !== null ) {\r\n        lang = \"chinese\";\r\n    }\r\n\r\n    var russianChars = getRussianChars(str);\r\n    if( russianChars !== null ) {\r\n        lang = ELanguages.RU;\r\n    }\r\n\r\n    // Detect if majority of chars are Simplified or Traditional\r\n    if( lang === \"chinese\" ) {\r\n        // Using to detect\r\n        // https://github.com/nickdrewe/traditional-or-simplified\r\n        var result = TradOrSimp.detect(str);\r\n        if (result.detectedCharacters === 'simplified') {\r\n            lang = ELanguages.SZH;\r\n        } else {\r\n            lang = ELanguages.TZH;\r\n        }\r\n    }\r\n    \r\n    // No other languages, set to English\r\n    if( koreanChars == null && japaneseChars == null && chineseChars == null && russianChars == null ) {\r\n        lang = ELanguages.ENG;\r\n    }\r\n\r\n    return lang;\r\n}\r\n\r\n// Returns an array of all Korean characters in string\r\nexport function getKoreanChars(str) {\r\n    return str.match(/[\\uac00-\\ud7af]|[\\u1100-\\u11ff]|[\\u3130-\\u318f]|[\\ua960-\\ua97f]|[\\ud7b0-\\ud7ff]/g);\r\n}\r\n\r\n// Matches Hirgana or Katakana (https://gist.github.com/oanhnn/9043867)\r\nexport function getJapaneseChars(str) {\r\n    return str.match(/[ぁ-んァ-ン]/g);\r\n}\r\n\r\n// Returns an array of all Chinese characters in string\r\nexport function getChineseChars(str) {\r\n    return str.match(/[\\u2E80-\\u2FD5\\u3190-\\u319f\\u3400-\\u4DBF\\u4E00-\\u9FCC\\uF900-\\uFAAD]/g);\r\n}\r\n\r\nexport function getRussianChars(str) {\r\n    return str.match(/^[аАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяЯ]+$/);\r\n}","/// Removes any brackets from inside a string\r\nexport function filterBrackets(str) {\r\n    return str.replace(/ *\\([^)]*\\) */g, \"\");\r\n}\r\n\r\n/// Removes any new line or spaces at start and end string\r\nexport function filterStartEndSpaceChars(str) {\r\n    return str.replace(/^\\s+|\\s+$/g, '');\r\n}","import axios from \"axios\";\r\nimport {\r\n    GENIUS_ACCESS_TOKEN,\r\n    REQUEST_TIMEOUT_MS,\r\n    PROXY_URL\r\n} from \"../consts\";\r\nimport { \r\n    filterBrackets,\r\n    filterStartEndSpaceChars \r\n} from \"../helpers/filterHelper\";\r\n\r\nconst GeniusService = {\r\n\r\n    /// Searches the Genius API using the spotify play context\r\n    search: function (playData, callback) {\r\n        if (!playData) \r\n            return null;\r\n\r\n        let filteredTitle = filterBrackets(playData.item.name);\r\n        let searchTerm = encodeURIComponent(`${filteredTitle} ${playData.item.artists[0].name}`);\r\n        let geniusUrl = PROXY_URL + \"https://api.genius.com/search?q=\" + searchTerm;\r\n        axios({\r\n            method: 'GET',\r\n            url: geniusUrl,\r\n            headers: { 'Authorization': 'Bearer ' + GENIUS_ACCESS_TOKEN },\r\n            timeout: REQUEST_TIMEOUT_MS,\r\n        }).then(result => {\r\n            if(callback) {\r\n                callback(result.data);\r\n            }\r\n        }).catch(error => {\r\n            console.error(error);\r\n        });\r\n    },\r\n\r\n    /// Parses HTML from a url and returns the page's lyrics\r\n    parseLyricsFromUrl(geniusUrl, callback) {\r\n        var url = PROXY_URL + geniusUrl + \"?react=1\";\r\n        axios({\r\n            method: 'GET',\r\n            url: url,\r\n            headers: { 'Authorization': 'Bearer ' + GENIUS_ACCESS_TOKEN },\r\n            timeout: REQUEST_TIMEOUT_MS,\r\n        }).then(result => {\r\n            if(callback) {\r\n                var parseHTML = function(str) {\r\n                    var tmp = document.implementation.createHTMLDocument();\r\n                    tmp.body.innerHTML = str;\r\n                    return tmp.body;\r\n                };\r\n                  \r\n                let allLyrics = \"\";\r\n\r\n                let html = parseHTML(result.request.responseText);\r\n                let isNewGeniusLayout = html.querySelectorAll(\".lyrics\").length <= 0;\r\n                if (isNewGeniusLayout) {\r\n                    // Using new Genius layout\r\n                    let allDivs = html.getElementsByTagName(\"div\");\r\n                    for(let div of allDivs) {\r\n                        let lowercase = div.className.toLowerCase();\r\n                        if(lowercase.includes(\"lyric\") && lowercase.includes(\"container\")) {\r\n                            //Get initial html content\r\n                            let innerHtml = div.innerHTML;\r\n                            // Remove line breaks used as line endings\r\n                            let brGone = innerHtml.replace(/<br>/g, '\\n');\r\n                            // Replace <div>...</div> content used for ads\r\n                            let aGone = brGone.replace(/<[^>]*>?/gm, '');\r\n                            allLyrics  += aGone;\r\n                        }\r\n                    }\r\n                    if (allLyrics) \r\n                    {\r\n                        let filteredLyrics = filterStartEndSpaceChars(allLyrics);\r\n                        callback(filteredLyrics);\r\n                    } else {\r\n                        console.error(`Unable to parse lyrics correctly from page ${url}`);\r\n                    }\r\n                } else {\r\n                    //Old Genius layout, use old algorithm\r\n                    let filtered = html.querySelectorAll(\".lyrics\");\r\n                    if (filtered.length > 0) \r\n                    {\r\n                        let filteredLyrics = filterStartEndSpaceChars(filtered[0].textContent);\r\n                        callback(filteredLyrics);\r\n                    }\r\n                    else\r\n                        console.error(\"Unable to parse lyrics from old Genius layout\");\r\n                }\r\n            }\r\n        }).catch(error => {\r\n            console.error(error);\r\n        });\r\n    },\r\n\r\n    /// Gets the most relevant result from a range of hits from the Genius API, \r\n    /// using the Spotify track 'item'\r\n    getRelevantResult: function (hits, trackInfo) {\r\n        if (!trackInfo) {\r\n            return;\r\n        }\r\n        if (hits && hits.length > 0) {\r\n            for(let hit of hits) {\r\n                let geniusArtist = hit.result.primary_artist.name.toLowerCase();\r\n                let geniusTrackName = filterBrackets(hit.result.title).toLowerCase();\r\n\r\n                let spotifyTrackName = filterBrackets(trackInfo.name).toLowerCase();\r\n                let spotifyFirstArtistName = trackInfo.artists[0].name.toLowerCase();\r\n                // Check if Genius track name/artist includes Spotify track name/artist or vice versa\r\n                if ((geniusArtist.includes(spotifyFirstArtistName) && geniusTrackName.includes(spotifyTrackName))\r\n                    || (spotifyFirstArtistName.includes(geniusArtist) && spotifyTrackName.includes(geniusTrackName))) {\r\n                        return hit;\r\n                }\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default GeniusService;","import React, { Component } from 'react';\r\nimport {\r\n    Button, \r\n    Form\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n    determineLanguage,\r\n    ELanguages\r\n} from \"../../helpers/languageHelper\";\r\n\r\nimport Kuroshiro from \"kuroshiro\";\r\nimport KuromojiAnalyzer from \"kuroshiro-analyzer-kuromoji\";\r\nimport pinyin4js from 'pinyin4js';\r\nimport Aromanize from \"aromanize\";\r\nimport cyrillicToTranslit from \"cyrillic-to-translit-js\";\r\n\r\nimport GeniusService from '../../services/genius';\r\nimport \"./Lyrics.css\";\r\n\r\nclass Lyrics extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const kuroshiro = new Kuroshiro();\r\n        kuroshiro.init(new KuromojiAnalyzer({ \r\n            // Path starts at base of public folder\r\n            dictPath: \"./dict\" \r\n        }));\r\n\r\n        this.state = {\r\n            // Current playState of Spotify\r\n            playState: props.playState,\r\n\r\n            originalLyrics: null,\r\n            romanizedLyrics: null,\r\n\r\n            // Current lyrics that are loaded, the spotify track info\r\n            lyricsSpotifyTrackName: null,\r\n            // Current lyrics info from Genius\r\n            lyricsInfo: null,\r\n            // Are the lyrics loaded\r\n            loaded: true,\r\n            /// Are the current romanizedLyrics romanized or not?\r\n            isRomanized: false,\r\n            /// Current determined language of the original lyric language\r\n            originalLyricLanguage: ELanguages.NONE,\r\n\r\n            kuroshiro: kuroshiro,\r\n        };\r\n\r\n        this.updateLyrics = this.updateLyrics.bind(this);\r\n        this.onToggleRomanize = this.onToggleRomanize.bind(this);\r\n        this.resetLyricState = this.resetLyricState.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.playState !== this.props.playState) {\r\n            this.setState({\r\n                playState: this.props.playState,\r\n            }, () => {\r\n                this.updateLyrics();\r\n            });\r\n        }\r\n    }\r\n\r\n    updateLyrics() {\r\n        if(this.state.playState) {\r\n            if (this.state.lyricsSpotifyTrackName === null ||\r\n                    (this.state.lyricsSpotifyTrackName !== null && this.state.playState.item.name !== this.state.lyricsSpotifyTrackName?.name)\r\n                    || !this.state.loaded) \r\n                {\r\n                this.setState({ \r\n                    loaded: false, \r\n                });\r\n\r\n                GeniusService.search(this.state.playState, (result) => {\r\n                    if(result.response.hits.length > 0) {\r\n                        // Search hits for most relevant result\r\n                        let info = GeniusService.getRelevantResult(result.response.hits, this.state.playState.item);\r\n                        if (info) {\r\n                            // Relevant Genius lyrics found\r\n                            console.log(`Relevant Result: ${info.result.full_title}`);\r\n                            GeniusService.parseLyricsFromUrl(info.result.url, (lyrics) => {\r\n                                console.log(`Loaded and set lyrics from ${info.result.url}`);\r\n                                let origLyricLang = determineLanguage(lyrics);\r\n                                console.log(`Original lyrics language: '${origLyricLang}'`);\r\n                                this.setState({\r\n                                    originalLyrics: lyrics,\r\n                                    romanizedLyrics: lyrics,\r\n                                    originalLyricLanguage: origLyricLang,\r\n\r\n                                    lyricsInfo: info,\r\n                                    loaded: true,\r\n                                    lyricsSpotifyTrackName: this.state.playState.item,\r\n                                });\r\n                            });\r\n                        } else {\r\n                            // No relevant Genius lyrics found\r\n                            console.log(`No related lyrics found for song '${this.state.playState.item.artists[0].name} - ${this.state.playState.item.name}'`);\r\n                            this.setState({\r\n                                loaded: true,\r\n                            });\r\n                            this.resetLyricState();\r\n                        }\r\n                    } else {\r\n                        // No search hits found at all\r\n                        console.log(\"Didn't find any search results on Genius\");\r\n                        this.setState({\r\n                            loaded: true,\r\n                        });\r\n                        this.resetLyricState();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    resetLyricState() {\r\n        this.setState({\r\n            originalLyrics: null,\r\n            romanizedLyrics: null,\r\n            lyricsInfo: null,\r\n            isRomanized: false,\r\n            originalLyricLanguage: ELanguages.NONE,\r\n        });\r\n    }\r\n\r\n    onToggleRomanize() {\r\n        if (this.state.isRomanized) {\r\n            this.setState({\r\n                romanizedLyrics: this.state.originalLyrics,\r\n            });\r\n        } else {\r\n            let romanizedLyrics = \"\";\r\n            switch(this.state.originalLyricLanguage)\r\n            {\r\n                case ELanguages.JP:\r\n                    {\r\n                        romanizedLyrics = \"ROMANIZED\";\r\n                        this.state.kuroshiro.convert(this.state.originalLyrics, { \r\n                            to: \"romaji\",\r\n                            mode: \"spaced\",\r\n                        }).then((romajiLyrics) => {\r\n                            // remove double space added inbetween other phrases\r\n                            romajiLyrics = romajiLyrics.replace(/ +(?= )/g,'');\r\n                            this.setState({\r\n                                romanizedLyrics: romajiLyrics,\r\n                            });\r\n                        });\r\n                        break;\r\n                    }\r\n                    case ELanguages.SZH:\r\n                    case ELanguages.TZH:\r\n                        {\r\n                            romanizedLyrics = pinyin4js.convertToPinyinString(this.state.originalLyrics, ' ', pinyin4js.WITH_TONE_MARK)\r\n                            break;\r\n                        }\r\n                    case ELanguages.KR:\r\n                        {\r\n                            romanizedLyrics = Aromanize.romanize(this.state.originalLyrics);\r\n                            break;\r\n                        }\r\n                    case ELanguages.RU:\r\n                        {\r\n                            romanizedLyrics = cyrillicToTranslit().transform(this.state.originalLyrics, \" \");\r\n                            break;\r\n                        }\r\n                default:\r\n                    break;\r\n            }\r\n            this.setState({\r\n                romanizedLyrics: romanizedLyrics,\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            isRomanized: !this.state.isRomanized,\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"w-100 lyrics-container py-2\">\r\n                <div className=\"text-center h-100\">\r\n                    {\r\n                        !this.state.loaded && <FontAwesomeIcon className=\"fa-spin\" size=\"3x\" icon={faSpinner} />\r\n                    }\r\n                    {/* Lyrics container */}\r\n                    {\r\n                        this.state.romanizedLyrics && this.state.loaded &&\r\n                        <div className=\"h-100\">\r\n                             <div \r\n                                    className=\"pr-5 mb-2 text-right d-none d-sm-block\"\r\n                                    style={{ \r\n                                        height: \"35px\", \r\n                                        position: \"absolute\", \r\n                                        right: 0,\r\n                                        fontSize: \"0.8rem\",\r\n                                        }}>\r\n                                        <h6 className=\"mb-1\">Lyric Info</h6>\r\n                                        <a \r\n                                            href={this.state.lyricsInfo.result.url}\r\n                                            className=\"py-1\">\r\n                                            {this.state.lyricsInfo.result.full_title}\r\n                                        </a>\r\n                                        {\r\n                                            this.state.originalLyricLanguage !== ELanguages.ENG && \r\n                                            <Form>\r\n                                                <Form.Check\r\n                                                    type=\"switch\"\r\n                                                    id=\"custom-switch\"\r\n                                                    label=\"Romanize\"\r\n                                                    onChange={this.onToggleRomanize}>\r\n                                                </Form.Check>\r\n                                            </Form>\r\n                                            \r\n                                        }\r\n                                </div>\r\n                                <div className=\"lyrics-content\" >\r\n                                    { this.state.romanizedLyrics }\r\n                                </div>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        !this.state.originalLyrics && this.state.loaded && \r\n                                <a href=\"https://genius.com/new\">\r\n                                    <Button variant=\"outline-light\" className=\"mt-2\"> \r\n                                        Add to Genius\r\n                                    </Button>\r\n                                </a>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lyrics;","import Service from \"./Service\";\r\n\r\nexport default Service;","import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Toast,\r\n} from \"react-bootstrap\";\r\nimport {\r\n    PLAYER_UPDATE_MS\r\n} from \"../../consts\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Player from \"../Player\";\r\n\r\nimport SpotifyService from \"../../services/spotify\";\r\nimport Cookies, { EGenifyCookieNames } from \"../../helpers/cookieHelper\";\r\nimport Lyrics from '../Lyrics/Lyrics';\r\n\r\nclass Service extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Retrieve saved auth in cookies\r\n        let redirect = \"\";\r\n        let authStringified = Cookies.getCookie(EGenifyCookieNames.SPOTIFY_AUTH);\r\n        let auth = JSON.parse(authStringified);\r\n        if (auth === null) {\r\n            redirect = \"/?auth=invalid\";\r\n            console.log(\"No or auth found in cookies, going home\");\r\n        } else {\r\n            auth.expireDate = new Date(auth.expireDate);\r\n\r\n            if (auth.expireDate < Date.now()) {\r\n                Cookies.deleteCookie(EGenifyCookieNames.SPOTIFY_AUTH);\r\n                redirect = \"/?auth=expired\";\r\n                console.log(\"Auth found but has expired\");\r\n            } else {\r\n                console.log(`Auth found. Expires at '${auth.expireDate.toLocaleString()}'`);\r\n            }\r\n        }\r\n\r\n        this.state = {\r\n            auth: auth,\r\n\r\n            infoMessage: \"\",\r\n            showInfoMessage: false,\r\n\r\n            redirect: redirect,\r\n        };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        if(this.state.auth === null ){\r\n            // Redirect to home if auth is invalid\r\n            this.setState({\r\n                redirect: \"/?auth=invalid\",\r\n            });\r\n        } else {\r\n            // Get inital Spotify track status\r\n            SpotifyService.getCurrentPlaybackState(this.state.auth.authToken, (data) => {\r\n                console.log(data);\r\n                this.setState({\r\n                    playState: data,\r\n                    loaded: true,\r\n                });\r\n            });\r\n    \r\n            // Start auto retrieval of Spotify track status\r\n            setInterval(() => {\r\n                SpotifyService.getCurrentPlaybackState(this.state.auth.authToken, (data) => {\r\n                    // If track changed\r\n                    if (data.item?.name !== this.state.playState.item?.name) {\r\n                        console.log(`TRACK CHANGED | ${data.item.artists[0].name} - ${data.item?.name}`);\r\n                    }\r\n                    this.setState({\r\n                        playState: data,\r\n                    });\r\n                });\r\n            }, PLAYER_UPDATE_MS);\r\n\r\n            // Set timer when auth expired\r\n            let expireMs = this.state.auth.expireDate - new Date(Date.now());\r\n            setTimeout(() => {\r\n                console.log(\"showing info message\");\r\n                this.setState({\r\n                    infoMessage: \"User authorization is about to expire in one minute\",\r\n                    showInfoMessage: true,\r\n                });\r\n            }, expireMs - 1 * 60 * 1000);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"genify-home spotify-black\">\r\n                <Row className=\"mx-0\">\r\n                    <Player \r\n                        playState={this.state.playState}\r\n                        authToken={this.state.auth?.authToken} />\r\n                </Row>\r\n                <Lyrics \r\n                    playState={this.state.playState} />\r\n                {\r\n                    this.state.infoMessage &&\r\n                    <Toast \r\n                        show={this.state.showInfoMessage}\r\n                        onClose={() => this.setState({ showInfoMessage: false })}\r\n                        className=\"mr-2 mb-2 text-left\"\r\n                        style={{\r\n                            position: 'absolute',\r\n                            bottom: 0,\r\n                            right: 0,\r\n                            color: \"black\",\r\n                        }}>\r\n                        <Toast.Header>\r\n                            <strong className=\"mr-auto\">Info</strong>\r\n                            {/* <small>11 mins ago</small> */}\r\n                        </Toast.Header>\r\n                        <Toast.Body>\r\n                            { this.state.infoMessage }\r\n                        </Toast.Body>\r\n                    </Toast>\r\n                }\r\n\r\n                {\r\n                    this.state.redirect && <Redirect to={this.state.redirect} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Service;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport Cookies, { EGenifyCookieNames } from \"../../helpers/cookieHelper\";\r\nimport SpotifyService from \"../../services/spotify\";\r\n\r\nclass Callback extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let auth = null;\r\n        if (props.location?.hash) {\r\n            auth = SpotifyService.parseAuth(props.location.hash.substring(1));\r\n        }\r\n\r\n        this.state = {\r\n            auth: auth,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.auth) {\r\n            let stringified = JSON.stringify(this.state.auth);\r\n            Cookies.setCookie(EGenifyCookieNames.SPOTIFY_AUTH, stringified);\r\n        } else {\r\n            console.error(\"No auth saved to cookies, error occured\");\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.setState({\r\n                redirect: \"/app\",\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"h-100 w-100 spotify-black\">\r\n                <h3 className=\"text-center pt-5\">\r\n                    Redirecting...\r\n                </h3>\r\n                <div className=\"mx-auto\" style={{ width: \"50px\" }}>\r\n                    <FontAwesomeIcon \r\n                        className=\"fa-spin\"\r\n                        size=\"3x\" \r\n                        icon={faSpinner} />\r\n                </div>\r\n                {\r\n                    this.state.redirect && <Redirect to={this.state.redirect} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Callback;","import App from \"./App\";\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport { \r\n    Route,\r\n    Switch,\r\n    BrowserRouter\r\n} from 'react-router-dom';\r\n\r\nimport Home from \"../Home\";\r\nimport Navigation from \"../Navigation\";\r\nimport FourOhFour from \"../FourOhFour\";\r\nimport Service from \"../Service\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\nimport Callback from '../Callback/Callback';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <Navigation />\r\n\r\n                <Switch>\r\n                    {/* Homepage */}\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    {/* Main App service page */}\r\n                    <Route exact path=\"/app\" component={Service} />\r\n                    {/* Spotify callback for retrieving/parsing auth*/}\r\n                    <Route exact path=\"/callback\" component={Callback} />\r\n                    {/* 404 error page handling */}\r\n                    <Route component={FourOhFour} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './components/App';\r\nimport \"./index.css\";\r\n\r\nconst app = (\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root') );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}